// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewV1VsphereMappingGetParams creates a new V1VsphereMappingGetParams object
// with the default values initialized.
func NewV1VsphereMappingGetParams() *V1VsphereMappingGetParams {
	var ()
	return &V1VsphereMappingGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV1VsphereMappingGetParamsWithTimeout creates a new V1VsphereMappingGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1VsphereMappingGetParamsWithTimeout(timeout time.Duration) *V1VsphereMappingGetParams {
	var ()
	return &V1VsphereMappingGetParams{

		timeout: timeout,
	}
}

// NewV1VsphereMappingGetParamsWithContext creates a new V1VsphereMappingGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1VsphereMappingGetParamsWithContext(ctx context.Context) *V1VsphereMappingGetParams {
	var ()
	return &V1VsphereMappingGetParams{

		Context: ctx,
	}
}

// NewV1VsphereMappingGetParamsWithHTTPClient creates a new V1VsphereMappingGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1VsphereMappingGetParamsWithHTTPClient(client *http.Client) *V1VsphereMappingGetParams {
	var ()
	return &V1VsphereMappingGetParams{
		HTTPClient: client,
	}
}

/*V1VsphereMappingGetParams contains all the parameters to send to the API endpoint
for the v1 vsphere mapping get operation typically these are written to a http.Request
*/
type V1VsphereMappingGetParams struct {

	/*Datacenter
	  Specify the vSphere datacenter name

	*/
	Datacenter string
	/*GatewayUID
	  Specify the vSphere gateway uid

	*/
	GatewayUID string
	/*Network
	  Specify the vSphere network name

	*/
	Network string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 vsphere mapping get params
func (o *V1VsphereMappingGetParams) WithTimeout(timeout time.Duration) *V1VsphereMappingGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 vsphere mapping get params
func (o *V1VsphereMappingGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 vsphere mapping get params
func (o *V1VsphereMappingGetParams) WithContext(ctx context.Context) *V1VsphereMappingGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 vsphere mapping get params
func (o *V1VsphereMappingGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 vsphere mapping get params
func (o *V1VsphereMappingGetParams) WithHTTPClient(client *http.Client) *V1VsphereMappingGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 vsphere mapping get params
func (o *V1VsphereMappingGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDatacenter adds the datacenter to the v1 vsphere mapping get params
func (o *V1VsphereMappingGetParams) WithDatacenter(datacenter string) *V1VsphereMappingGetParams {
	o.SetDatacenter(datacenter)
	return o
}

// SetDatacenter adds the datacenter to the v1 vsphere mapping get params
func (o *V1VsphereMappingGetParams) SetDatacenter(datacenter string) {
	o.Datacenter = datacenter
}

// WithGatewayUID adds the gatewayUID to the v1 vsphere mapping get params
func (o *V1VsphereMappingGetParams) WithGatewayUID(gatewayUID string) *V1VsphereMappingGetParams {
	o.SetGatewayUID(gatewayUID)
	return o
}

// SetGatewayUID adds the gatewayUid to the v1 vsphere mapping get params
func (o *V1VsphereMappingGetParams) SetGatewayUID(gatewayUID string) {
	o.GatewayUID = gatewayUID
}

// WithNetwork adds the network to the v1 vsphere mapping get params
func (o *V1VsphereMappingGetParams) WithNetwork(network string) *V1VsphereMappingGetParams {
	o.SetNetwork(network)
	return o
}

// SetNetwork adds the network to the v1 vsphere mapping get params
func (o *V1VsphereMappingGetParams) SetNetwork(network string) {
	o.Network = network
}

// WriteToRequest writes these params to a swagger request
func (o *V1VsphereMappingGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param datacenter
	qrDatacenter := o.Datacenter
	qDatacenter := qrDatacenter
	if qDatacenter != "" {
		if err := r.SetQueryParam("datacenter", qDatacenter); err != nil {
			return err
		}
	}

	// query param gatewayUid
	qrGatewayUID := o.GatewayUID
	qGatewayUID := qrGatewayUID
	if qGatewayUID != "" {
		if err := r.SetQueryParam("gatewayUid", qGatewayUID); err != nil {
			return err
		}
	}

	// query param network
	qrNetwork := o.Network
	qNetwork := qrNetwork
	if qNetwork != "" {
		if err := r.SetQueryParam("network", qNetwork); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
