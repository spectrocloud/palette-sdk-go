// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/spectrocloud/palette-api-go/models"
)

// NewV1RegistriesHelmCreateParams creates a new V1RegistriesHelmCreateParams object
// with the default values initialized.
func NewV1RegistriesHelmCreateParams() *V1RegistriesHelmCreateParams {
	var (
		scopeDefault = string("all")
	)
	return &V1RegistriesHelmCreateParams{
		Scope: &scopeDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewV1RegistriesHelmCreateParamsWithTimeout creates a new V1RegistriesHelmCreateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1RegistriesHelmCreateParamsWithTimeout(timeout time.Duration) *V1RegistriesHelmCreateParams {
	var (
		scopeDefault = string("all")
	)
	return &V1RegistriesHelmCreateParams{
		Scope: &scopeDefault,

		timeout: timeout,
	}
}

// NewV1RegistriesHelmCreateParamsWithContext creates a new V1RegistriesHelmCreateParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1RegistriesHelmCreateParamsWithContext(ctx context.Context) *V1RegistriesHelmCreateParams {
	var (
		scopeDefault = string("all")
	)
	return &V1RegistriesHelmCreateParams{
		Scope: &scopeDefault,

		Context: ctx,
	}
}

// NewV1RegistriesHelmCreateParamsWithHTTPClient creates a new V1RegistriesHelmCreateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1RegistriesHelmCreateParamsWithHTTPClient(client *http.Client) *V1RegistriesHelmCreateParams {
	var (
		scopeDefault = string("all")
	)
	return &V1RegistriesHelmCreateParams{
		Scope:      &scopeDefault,
		HTTPClient: client,
	}
}

/*V1RegistriesHelmCreateParams contains all the parameters to send to the API endpoint
for the v1 registries helm create operation typically these are written to a http.Request
*/
type V1RegistriesHelmCreateParams struct {

	/*Body*/
	Body *models.V1HelmRegistryEntity
	/*Scope*/
	Scope *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 registries helm create params
func (o *V1RegistriesHelmCreateParams) WithTimeout(timeout time.Duration) *V1RegistriesHelmCreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 registries helm create params
func (o *V1RegistriesHelmCreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 registries helm create params
func (o *V1RegistriesHelmCreateParams) WithContext(ctx context.Context) *V1RegistriesHelmCreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 registries helm create params
func (o *V1RegistriesHelmCreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 registries helm create params
func (o *V1RegistriesHelmCreateParams) WithHTTPClient(client *http.Client) *V1RegistriesHelmCreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 registries helm create params
func (o *V1RegistriesHelmCreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the v1 registries helm create params
func (o *V1RegistriesHelmCreateParams) WithBody(body *models.V1HelmRegistryEntity) *V1RegistriesHelmCreateParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the v1 registries helm create params
func (o *V1RegistriesHelmCreateParams) SetBody(body *models.V1HelmRegistryEntity) {
	o.Body = body
}

// WithScope adds the scope to the v1 registries helm create params
func (o *V1RegistriesHelmCreateParams) WithScope(scope *string) *V1RegistriesHelmCreateParams {
	o.SetScope(scope)
	return o
}

// SetScope adds the scope to the v1 registries helm create params
func (o *V1RegistriesHelmCreateParams) SetScope(scope *string) {
	o.Scope = scope
}

// WriteToRequest writes these params to a swagger request
func (o *V1RegistriesHelmCreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.Scope != nil {

		// query param scope
		var qrScope string
		if o.Scope != nil {
			qrScope = *o.Scope
		}
		qScope := qrScope
		if qScope != "" {
			if err := r.SetQueryParam("scope", qScope); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
