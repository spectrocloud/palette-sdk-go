// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/spectrocloud/palette-api-go/models"
)

// NewV1VsphereAccountValidateParams creates a new V1VsphereAccountValidateParams object
// with the default values initialized.
func NewV1VsphereAccountValidateParams() *V1VsphereAccountValidateParams {
	var ()
	return &V1VsphereAccountValidateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV1VsphereAccountValidateParamsWithTimeout creates a new V1VsphereAccountValidateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1VsphereAccountValidateParamsWithTimeout(timeout time.Duration) *V1VsphereAccountValidateParams {
	var ()
	return &V1VsphereAccountValidateParams{

		timeout: timeout,
	}
}

// NewV1VsphereAccountValidateParamsWithContext creates a new V1VsphereAccountValidateParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1VsphereAccountValidateParamsWithContext(ctx context.Context) *V1VsphereAccountValidateParams {
	var ()
	return &V1VsphereAccountValidateParams{

		Context: ctx,
	}
}

// NewV1VsphereAccountValidateParamsWithHTTPClient creates a new V1VsphereAccountValidateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1VsphereAccountValidateParamsWithHTTPClient(client *http.Client) *V1VsphereAccountValidateParams {
	var ()
	return &V1VsphereAccountValidateParams{
		HTTPClient: client,
	}
}

/*V1VsphereAccountValidateParams contains all the parameters to send to the API endpoint
for the v1 vsphere account validate operation typically these are written to a http.Request
*/
type V1VsphereAccountValidateParams struct {

	/*VsphereCloudAccount
	  Request payload for VSphere cloud account

	*/
	VsphereCloudAccount *models.V1VsphereCloudAccount

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 vsphere account validate params
func (o *V1VsphereAccountValidateParams) WithTimeout(timeout time.Duration) *V1VsphereAccountValidateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 vsphere account validate params
func (o *V1VsphereAccountValidateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 vsphere account validate params
func (o *V1VsphereAccountValidateParams) WithContext(ctx context.Context) *V1VsphereAccountValidateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 vsphere account validate params
func (o *V1VsphereAccountValidateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 vsphere account validate params
func (o *V1VsphereAccountValidateParams) WithHTTPClient(client *http.Client) *V1VsphereAccountValidateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 vsphere account validate params
func (o *V1VsphereAccountValidateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithVsphereCloudAccount adds the vsphereCloudAccount to the v1 vsphere account validate params
func (o *V1VsphereAccountValidateParams) WithVsphereCloudAccount(vsphereCloudAccount *models.V1VsphereCloudAccount) *V1VsphereAccountValidateParams {
	o.SetVsphereCloudAccount(vsphereCloudAccount)
	return o
}

// SetVsphereCloudAccount adds the vsphereCloudAccount to the v1 vsphere account validate params
func (o *V1VsphereAccountValidateParams) SetVsphereCloudAccount(vsphereCloudAccount *models.V1VsphereCloudAccount) {
	o.VsphereCloudAccount = vsphereCloudAccount
}

// WriteToRequest writes these params to a swagger request
func (o *V1VsphereAccountValidateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.VsphereCloudAccount != nil {
		if err := r.SetBodyParam(o.VsphereCloudAccount); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
