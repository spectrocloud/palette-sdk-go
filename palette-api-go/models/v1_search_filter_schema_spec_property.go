// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1SearchFilterSchemaSpecProperty v1 search filter schema spec property
//
// swagger:model v1SearchFilterSchemaSpecProperty
type V1SearchFilterSchemaSpecProperty struct {

	// name
	Name string `json:"name,omitempty"`

	// hide display
	HideDisplay bool `json:"hideDisplay,omitempty"`

	// display name
	DisplayName string `json:"displayName,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// enum
	Enum []string `json:"enum,omitempty"`

	// enum values
	EnumValues []*V1SearchFilterSchemaSpecEnumValue `json:"enumValues,omitempty"`

	// default
	Default string `json:"default,omitempty"`

	// min int val
	MinIntVal int32 `json:"minIntVal,omitempty"`

	// max int val
	MaxIntVal int32 `json:"maxIntVal,omitempty"`

	// min float val
	MinFloatVal float64 `json:"minFloatVal,omitempty"`

	// max float val
	MaxFloatVal float64 `json:"maxFloatVal,omitempty"`
}

// Validate validates this v1 search filter schema spec property
func (m *V1SearchFilterSchemaSpecProperty) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnumValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1SearchFilterSchemaSpecProperty) validateEnumValues(formats strfmt.Registry) error {

	if swag.IsZero(m.EnumValues) { // not required
		return nil
	}

	for i := 0; i < len(m.EnumValues); i++ {
		if swag.IsZero(m.EnumValues[i]) { // not required
			continue
		}

		if m.EnumValues[i] != nil {
			if err := m.EnumValues[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("enumValues" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1SearchFilterSchemaSpecProperty) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1SearchFilterSchemaSpecProperty) UnmarshalBinary(b []byte) error {
	var res V1SearchFilterSchemaSpecProperty
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
