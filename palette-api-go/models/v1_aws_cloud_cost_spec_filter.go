// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1AwsCloudCostSpecFilter Aws cloud account usage cost payload filter. startTime and endTime should be within 12 months range from now.
//
// swagger:model v1AwsCloudCostSpecFilter
type V1AwsCloudCostSpecFilter struct {

	// end time
	// Format: date-time
	EndTime V1Time `json:"endTime,omitempty"`

	// IAM UserId of AWS account
	IamUserID string `json:"iamUserId,omitempty"`

	// start time
	// Required: true
	// Format: date-time
	StartTime V1Time `json:"startTime"`
}

// Validate validates this v1 aws cloud cost spec filter
func (m *V1AwsCloudCostSpecFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1AwsCloudCostSpecFilter) validateEndTime(formats strfmt.Registry) error {

	if swag.IsZero(m.EndTime) { // not required
		return nil
	}

	if err := m.EndTime.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("endTime")
		}
		return err
	}

	return nil
}

func (m *V1AwsCloudCostSpecFilter) validateStartTime(formats strfmt.Registry) error {

	if err := m.StartTime.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("startTime")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1AwsCloudCostSpecFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1AwsCloudCostSpecFilter) UnmarshalBinary(b []byte) error {
	var res V1AwsCloudCostSpecFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
