// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1VMRemoveVolumeEntity v1 VM remove volume entity
//
// swagger:model v1VMRemoveVolumeEntity
type V1VMRemoveVolumeEntity struct {

	// If 'true' remove the disk from the Virtual Machine & Virtual Machine Instance, else remove the disk from the Virtual Machine Instance only
	Persist bool `json:"persist,omitempty"`

	// Parameters required to remove volume from virtual machine/virtual machine instance
	// Required: true
	RemoveVolumeOptions *V1VMRemoveVolumeOptions `json:"removeVolumeOptions"`
}

// Validate validates this v1 VM remove volume entity
func (m *V1VMRemoveVolumeEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRemoveVolumeOptions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1VMRemoveVolumeEntity) validateRemoveVolumeOptions(formats strfmt.Registry) error {

	if err := validate.Required("removeVolumeOptions", "body", m.RemoveVolumeOptions); err != nil {
		return err
	}

	if m.RemoveVolumeOptions != nil {
		if err := m.RemoveVolumeOptions.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("removeVolumeOptions")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1VMRemoveVolumeEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1VMRemoveVolumeEntity) UnmarshalBinary(b []byte) error {
	var res V1VMRemoveVolumeEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
