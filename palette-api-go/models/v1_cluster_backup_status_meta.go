// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1ClusterBackupStatusMeta Cluster Backup Status Meta
//
// swagger:model v1ClusterBackupStatusMeta
type V1ClusterBackupStatusMeta struct {

	// actor
	Actor *V1ClusterFeatureActor `json:"actor,omitempty"`

	// backup config
	BackupConfig *V1BackupStatusConfig `json:"backupConfig,omitempty"`

	// backup location config
	BackupLocationConfig *V1BackupLocationConfig `json:"backupLocationConfig,omitempty"`

	// backup request Uid
	BackupRequestUID string `json:"backupRequestUid,omitempty"`

	// backup status meta
	BackupStatusMeta []*V1BackupStatusMeta `json:"backupStatusMeta"`

	// restore status meta
	RestoreStatusMeta []*V1BackupRestoreStatusMeta `json:"restoreStatusMeta"`

	// state
	State string `json:"state,omitempty"`
}

// Validate validates this v1 cluster backup status meta
func (m *V1ClusterBackupStatusMeta) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActor(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBackupConfig(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBackupLocationConfig(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBackupStatusMeta(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRestoreStatusMeta(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1ClusterBackupStatusMeta) validateActor(formats strfmt.Registry) error {

	if swag.IsZero(m.Actor) { // not required
		return nil
	}

	if m.Actor != nil {
		if err := m.Actor.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("actor")
			}
			return err
		}
	}

	return nil
}

func (m *V1ClusterBackupStatusMeta) validateBackupConfig(formats strfmt.Registry) error {

	if swag.IsZero(m.BackupConfig) { // not required
		return nil
	}

	if m.BackupConfig != nil {
		if err := m.BackupConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("backupConfig")
			}
			return err
		}
	}

	return nil
}

func (m *V1ClusterBackupStatusMeta) validateBackupLocationConfig(formats strfmt.Registry) error {

	if swag.IsZero(m.BackupLocationConfig) { // not required
		return nil
	}

	if m.BackupLocationConfig != nil {
		if err := m.BackupLocationConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("backupLocationConfig")
			}
			return err
		}
	}

	return nil
}

func (m *V1ClusterBackupStatusMeta) validateBackupStatusMeta(formats strfmt.Registry) error {

	if swag.IsZero(m.BackupStatusMeta) { // not required
		return nil
	}

	for i := 0; i < len(m.BackupStatusMeta); i++ {
		if swag.IsZero(m.BackupStatusMeta[i]) { // not required
			continue
		}

		if m.BackupStatusMeta[i] != nil {
			if err := m.BackupStatusMeta[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("backupStatusMeta" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *V1ClusterBackupStatusMeta) validateRestoreStatusMeta(formats strfmt.Registry) error {

	if swag.IsZero(m.RestoreStatusMeta) { // not required
		return nil
	}

	for i := 0; i < len(m.RestoreStatusMeta); i++ {
		if swag.IsZero(m.RestoreStatusMeta[i]) { // not required
			continue
		}

		if m.RestoreStatusMeta[i] != nil {
			if err := m.RestoreStatusMeta[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("restoreStatusMeta" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1ClusterBackupStatusMeta) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ClusterBackupStatusMeta) UnmarshalBinary(b []byte) error {
	var res V1ClusterBackupStatusMeta
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
