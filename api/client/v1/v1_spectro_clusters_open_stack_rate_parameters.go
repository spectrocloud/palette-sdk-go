// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/spectrocloud/palette-sdk-go/api/models"
)

// NewV1SpectroClustersOpenStackRateParams creates a new V1SpectroClustersOpenStackRateParams object
// with the default values initialized.
func NewV1SpectroClustersOpenStackRateParams() *V1SpectroClustersOpenStackRateParams {
	var (
		periodTypeDefault = string("hourly")
	)
	return &V1SpectroClustersOpenStackRateParams{
		PeriodType: &periodTypeDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewV1SpectroClustersOpenStackRateParamsWithTimeout creates a new V1SpectroClustersOpenStackRateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1SpectroClustersOpenStackRateParamsWithTimeout(timeout time.Duration) *V1SpectroClustersOpenStackRateParams {
	var (
		periodTypeDefault = string("hourly")
	)
	return &V1SpectroClustersOpenStackRateParams{
		PeriodType: &periodTypeDefault,

		timeout: timeout,
	}
}

// NewV1SpectroClustersOpenStackRateParamsWithContext creates a new V1SpectroClustersOpenStackRateParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1SpectroClustersOpenStackRateParamsWithContext(ctx context.Context) *V1SpectroClustersOpenStackRateParams {
	var (
		periodTypeDefault = string("hourly")
	)
	return &V1SpectroClustersOpenStackRateParams{
		PeriodType: &periodTypeDefault,

		Context: ctx,
	}
}

// NewV1SpectroClustersOpenStackRateParamsWithHTTPClient creates a new V1SpectroClustersOpenStackRateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1SpectroClustersOpenStackRateParamsWithHTTPClient(client *http.Client) *V1SpectroClustersOpenStackRateParams {
	var (
		periodTypeDefault = string("hourly")
	)
	return &V1SpectroClustersOpenStackRateParams{
		PeriodType: &periodTypeDefault,
		HTTPClient: client,
	}
}

/*V1SpectroClustersOpenStackRateParams contains all the parameters to send to the API endpoint
for the v1 spectro clusters open stack rate operation typically these are written to a http.Request
*/
type V1SpectroClustersOpenStackRateParams struct {

	/*Body*/
	Body *models.V1SpectroOpenStackClusterRateEntity
	/*PeriodType*/
	PeriodType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 spectro clusters open stack rate params
func (o *V1SpectroClustersOpenStackRateParams) WithTimeout(timeout time.Duration) *V1SpectroClustersOpenStackRateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 spectro clusters open stack rate params
func (o *V1SpectroClustersOpenStackRateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 spectro clusters open stack rate params
func (o *V1SpectroClustersOpenStackRateParams) WithContext(ctx context.Context) *V1SpectroClustersOpenStackRateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 spectro clusters open stack rate params
func (o *V1SpectroClustersOpenStackRateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 spectro clusters open stack rate params
func (o *V1SpectroClustersOpenStackRateParams) WithHTTPClient(client *http.Client) *V1SpectroClustersOpenStackRateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 spectro clusters open stack rate params
func (o *V1SpectroClustersOpenStackRateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the v1 spectro clusters open stack rate params
func (o *V1SpectroClustersOpenStackRateParams) WithBody(body *models.V1SpectroOpenStackClusterRateEntity) *V1SpectroClustersOpenStackRateParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the v1 spectro clusters open stack rate params
func (o *V1SpectroClustersOpenStackRateParams) SetBody(body *models.V1SpectroOpenStackClusterRateEntity) {
	o.Body = body
}

// WithPeriodType adds the periodType to the v1 spectro clusters open stack rate params
func (o *V1SpectroClustersOpenStackRateParams) WithPeriodType(periodType *string) *V1SpectroClustersOpenStackRateParams {
	o.SetPeriodType(periodType)
	return o
}

// SetPeriodType adds the periodType to the v1 spectro clusters open stack rate params
func (o *V1SpectroClustersOpenStackRateParams) SetPeriodType(periodType *string) {
	o.PeriodType = periodType
}

// WriteToRequest writes these params to a swagger request
func (o *V1SpectroClustersOpenStackRateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.PeriodType != nil {

		// query param periodType
		var qrPeriodType string
		if o.PeriodType != nil {
			qrPeriodType = *o.PeriodType
		}
		qPeriodType := qrPeriodType
		if qPeriodType != "" {
			if err := r.SetQueryParam("periodType", qPeriodType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
