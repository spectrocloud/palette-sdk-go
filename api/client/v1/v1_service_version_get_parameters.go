// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewV1ServiceVersionGetParams creates a new V1ServiceVersionGetParams object
// with the default values initialized.
func NewV1ServiceVersionGetParams() *V1ServiceVersionGetParams {
	var ()
	return &V1ServiceVersionGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV1ServiceVersionGetParamsWithTimeout creates a new V1ServiceVersionGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1ServiceVersionGetParamsWithTimeout(timeout time.Duration) *V1ServiceVersionGetParams {
	var ()
	return &V1ServiceVersionGetParams{

		timeout: timeout,
	}
}

// NewV1ServiceVersionGetParamsWithContext creates a new V1ServiceVersionGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1ServiceVersionGetParamsWithContext(ctx context.Context) *V1ServiceVersionGetParams {
	var ()
	return &V1ServiceVersionGetParams{

		Context: ctx,
	}
}

// NewV1ServiceVersionGetParamsWithHTTPClient creates a new V1ServiceVersionGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1ServiceVersionGetParamsWithHTTPClient(client *http.Client) *V1ServiceVersionGetParams {
	var ()
	return &V1ServiceVersionGetParams{
		HTTPClient: client,
	}
}

/*V1ServiceVersionGetParams contains all the parameters to send to the API endpoint
for the v1 service version get operation typically these are written to a http.Request
*/
type V1ServiceVersionGetParams struct {

	/*ClusterUID
	  spectro cluster uid

	*/
	ClusterUID *string
	/*EdgeHostUID
	  edge host uid

	*/
	EdgeHostUID *string
	/*ServiceName
	  service name

	*/
	ServiceName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 service version get params
func (o *V1ServiceVersionGetParams) WithTimeout(timeout time.Duration) *V1ServiceVersionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 service version get params
func (o *V1ServiceVersionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 service version get params
func (o *V1ServiceVersionGetParams) WithContext(ctx context.Context) *V1ServiceVersionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 service version get params
func (o *V1ServiceVersionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 service version get params
func (o *V1ServiceVersionGetParams) WithHTTPClient(client *http.Client) *V1ServiceVersionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 service version get params
func (o *V1ServiceVersionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterUID adds the clusterUID to the v1 service version get params
func (o *V1ServiceVersionGetParams) WithClusterUID(clusterUID *string) *V1ServiceVersionGetParams {
	o.SetClusterUID(clusterUID)
	return o
}

// SetClusterUID adds the clusterUid to the v1 service version get params
func (o *V1ServiceVersionGetParams) SetClusterUID(clusterUID *string) {
	o.ClusterUID = clusterUID
}

// WithEdgeHostUID adds the edgeHostUID to the v1 service version get params
func (o *V1ServiceVersionGetParams) WithEdgeHostUID(edgeHostUID *string) *V1ServiceVersionGetParams {
	o.SetEdgeHostUID(edgeHostUID)
	return o
}

// SetEdgeHostUID adds the edgeHostUid to the v1 service version get params
func (o *V1ServiceVersionGetParams) SetEdgeHostUID(edgeHostUID *string) {
	o.EdgeHostUID = edgeHostUID
}

// WithServiceName adds the serviceName to the v1 service version get params
func (o *V1ServiceVersionGetParams) WithServiceName(serviceName string) *V1ServiceVersionGetParams {
	o.SetServiceName(serviceName)
	return o
}

// SetServiceName adds the serviceName to the v1 service version get params
func (o *V1ServiceVersionGetParams) SetServiceName(serviceName string) {
	o.ServiceName = serviceName
}

// WriteToRequest writes these params to a swagger request
func (o *V1ServiceVersionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ClusterUID != nil {

		// query param clusterUid
		var qrClusterUID string
		if o.ClusterUID != nil {
			qrClusterUID = *o.ClusterUID
		}
		qClusterUID := qrClusterUID
		if qClusterUID != "" {
			if err := r.SetQueryParam("clusterUid", qClusterUID); err != nil {
				return err
			}
		}

	}

	if o.EdgeHostUID != nil {

		// query param edgeHostUid
		var qrEdgeHostUID string
		if o.EdgeHostUID != nil {
			qrEdgeHostUID = *o.EdgeHostUID
		}
		qEdgeHostUID := qrEdgeHostUID
		if qEdgeHostUID != "" {
			if err := r.SetQueryParam("edgeHostUid", qEdgeHostUID); err != nil {
				return err
			}
		}

	}

	// path param serviceName
	if err := r.SetPathParam("serviceName", o.ServiceName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
