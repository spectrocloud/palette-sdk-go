// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/spectrocloud/palette-api-go/models"
)

// NewV1AuthenticateParams creates a new V1AuthenticateParams object
// with the default values initialized.
func NewV1AuthenticateParams() *V1AuthenticateParams {
	var (
		setCookieDefault = bool(true)
	)
	return &V1AuthenticateParams{
		SetCookie: &setCookieDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewV1AuthenticateParamsWithTimeout creates a new V1AuthenticateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1AuthenticateParamsWithTimeout(timeout time.Duration) *V1AuthenticateParams {
	var (
		setCookieDefault = bool(true)
	)
	return &V1AuthenticateParams{
		SetCookie: &setCookieDefault,

		timeout: timeout,
	}
}

// NewV1AuthenticateParamsWithContext creates a new V1AuthenticateParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1AuthenticateParamsWithContext(ctx context.Context) *V1AuthenticateParams {
	var (
		setCookieDefault = bool(true)
	)
	return &V1AuthenticateParams{
		SetCookie: &setCookieDefault,

		Context: ctx,
	}
}

// NewV1AuthenticateParamsWithHTTPClient creates a new V1AuthenticateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1AuthenticateParamsWithHTTPClient(client *http.Client) *V1AuthenticateParams {
	var (
		setCookieDefault = bool(true)
	)
	return &V1AuthenticateParams{
		SetCookie:  &setCookieDefault,
		HTTPClient: client,
	}
}

/*V1AuthenticateParams contains all the parameters to send to the API endpoint
for the v1 authenticate operation typically these are written to a http.Request
*/
type V1AuthenticateParams struct {

	/*Body
	  Describes the credential details required for authentication

	*/
	Body *models.V1AuthLogin
	/*SetCookie
	  Describes a way to set cookie from backend.

	*/
	SetCookie *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 authenticate params
func (o *V1AuthenticateParams) WithTimeout(timeout time.Duration) *V1AuthenticateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 authenticate params
func (o *V1AuthenticateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 authenticate params
func (o *V1AuthenticateParams) WithContext(ctx context.Context) *V1AuthenticateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 authenticate params
func (o *V1AuthenticateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 authenticate params
func (o *V1AuthenticateParams) WithHTTPClient(client *http.Client) *V1AuthenticateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 authenticate params
func (o *V1AuthenticateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the v1 authenticate params
func (o *V1AuthenticateParams) WithBody(body *models.V1AuthLogin) *V1AuthenticateParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the v1 authenticate params
func (o *V1AuthenticateParams) SetBody(body *models.V1AuthLogin) {
	o.Body = body
}

// WithSetCookie adds the setCookie to the v1 authenticate params
func (o *V1AuthenticateParams) WithSetCookie(setCookie *bool) *V1AuthenticateParams {
	o.SetSetCookie(setCookie)
	return o
}

// SetSetCookie adds the setCookie to the v1 authenticate params
func (o *V1AuthenticateParams) SetSetCookie(setCookie *bool) {
	o.SetCookie = setCookie
}

// WriteToRequest writes these params to a swagger request
func (o *V1AuthenticateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.SetCookie != nil {

		// query param setCookie
		var qrSetCookie bool
		if o.SetCookie != nil {
			qrSetCookie = *o.SetCookie
		}
		qSetCookie := swag.FormatBool(qrSetCookie)
		if qSetCookie != "" {
			if err := r.SetQueryParam("setCookie", qSetCookie); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
