// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1SystemUsersPasswordResetRequestReader is a Reader for the V1SystemUsersPasswordResetRequest structure.
type V1SystemUsersPasswordResetRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1SystemUsersPasswordResetRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewV1SystemUsersPasswordResetRequestNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewV1SystemUsersPasswordResetRequestNoContent creates a V1SystemUsersPasswordResetRequestNoContent with default headers values
func NewV1SystemUsersPasswordResetRequestNoContent() *V1SystemUsersPasswordResetRequestNoContent {
	return &V1SystemUsersPasswordResetRequestNoContent{}
}

/*
V1SystemUsersPasswordResetRequestNoContent handles this case with default header values.

Ok response without content
*/
type V1SystemUsersPasswordResetRequestNoContent struct {
	/*Audit uid for the request
	 */
	AuditUID string
}

func (o *V1SystemUsersPasswordResetRequestNoContent) Error() string {
	return fmt.Sprintf("[POST /v1/system/users/password/reset][%d] v1SystemUsersPasswordResetRequestNoContent ", 204)
}

func (o *V1SystemUsersPasswordResetRequestNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header AuditUid
	o.AuditUID = response.GetHeader("AuditUid")

	return nil
}

/*
V1SystemUsersPasswordResetRequestBody v1 system users password reset request body
swagger:model V1SystemUsersPasswordResetRequestBody
*/
type V1SystemUsersPasswordResetRequestBody struct {

	// Describes email if for which password reset email has to be sent
	// Required: true
	EmailID *string `json:"emailId"`
}

// Validate validates this v1 system users password reset request body
func (o *V1SystemUsersPasswordResetRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEmailID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *V1SystemUsersPasswordResetRequestBody) validateEmailID(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"emailId", "body", o.EmailID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *V1SystemUsersPasswordResetRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *V1SystemUsersPasswordResetRequestBody) UnmarshalBinary(b []byte) error {
	var res V1SystemUsersPasswordResetRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
