// Code generated by go-swagger; DO NOT EDIT.

package version1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewV1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams creates a new V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams object
// with the default values initialized.
func NewV1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams() *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams {
	var ()
	return &V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV1ClusterProfilesUIDPacksNameManifestsUIDDeleteParamsWithTimeout creates a new V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1ClusterProfilesUIDPacksNameManifestsUIDDeleteParamsWithTimeout(timeout time.Duration) *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams {
	var ()
	return &V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams{

		timeout: timeout,
	}
}

// NewV1ClusterProfilesUIDPacksNameManifestsUIDDeleteParamsWithContext creates a new V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1ClusterProfilesUIDPacksNameManifestsUIDDeleteParamsWithContext(ctx context.Context) *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams {
	var ()
	return &V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams{

		Context: ctx,
	}
}

// NewV1ClusterProfilesUIDPacksNameManifestsUIDDeleteParamsWithHTTPClient creates a new V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1ClusterProfilesUIDPacksNameManifestsUIDDeleteParamsWithHTTPClient(client *http.Client) *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams {
	var ()
	return &V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams{
		HTTPClient: client,
	}
}

/*
V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams contains all the parameters to send to the API endpoint
for the v1 cluster profiles Uid packs name manifests Uid delete operation typically these are written to a http.Request
*/
type V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams struct {

	/*ManifestUID
	  Cluster profile pack manifest uid

	*/
	ManifestUID string
	/*PackName
	  Cluster profile pack name

	*/
	PackName string
	/*UID
	  Cluster profile uid

	*/
	UID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 cluster profiles Uid packs name manifests Uid delete params
func (o *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams) WithTimeout(timeout time.Duration) *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 cluster profiles Uid packs name manifests Uid delete params
func (o *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 cluster profiles Uid packs name manifests Uid delete params
func (o *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams) WithContext(ctx context.Context) *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 cluster profiles Uid packs name manifests Uid delete params
func (o *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 cluster profiles Uid packs name manifests Uid delete params
func (o *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams) WithHTTPClient(client *http.Client) *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 cluster profiles Uid packs name manifests Uid delete params
func (o *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithManifestUID adds the manifestUID to the v1 cluster profiles Uid packs name manifests Uid delete params
func (o *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams) WithManifestUID(manifestUID string) *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams {
	o.SetManifestUID(manifestUID)
	return o
}

// SetManifestUID adds the manifestUid to the v1 cluster profiles Uid packs name manifests Uid delete params
func (o *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams) SetManifestUID(manifestUID string) {
	o.ManifestUID = manifestUID
}

// WithPackName adds the packName to the v1 cluster profiles Uid packs name manifests Uid delete params
func (o *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams) WithPackName(packName string) *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams {
	o.SetPackName(packName)
	return o
}

// SetPackName adds the packName to the v1 cluster profiles Uid packs name manifests Uid delete params
func (o *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams) SetPackName(packName string) {
	o.PackName = packName
}

// WithUID adds the uid to the v1 cluster profiles Uid packs name manifests Uid delete params
func (o *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams) WithUID(uid string) *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams {
	o.SetUID(uid)
	return o
}

// SetUID adds the uid to the v1 cluster profiles Uid packs name manifests Uid delete params
func (o *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams) SetUID(uid string) {
	o.UID = uid
}

// WriteToRequest writes these params to a swagger request
func (o *V1ClusterProfilesUIDPacksNameManifestsUIDDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param manifestUid
	if err := r.SetPathParam("manifestUid", o.ManifestUID); err != nil {
		return err
	}

	// path param packName
	if err := r.SetPathParam("packName", o.PackName); err != nil {
		return err
	}

	// path param uid
	if err := r.SetPathParam("uid", o.UID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
