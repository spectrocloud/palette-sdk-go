// Code generated by go-swagger; DO NOT EDIT.

package version1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/spectrocloud/palette-sdk-go/api/models"
)

// V1OverlordsUIDOpenStackAccountValidateReader is a Reader for the V1OverlordsUIDOpenStackAccountValidate structure.
type V1OverlordsUIDOpenStackAccountValidateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1OverlordsUIDOpenStackAccountValidateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewV1OverlordsUIDOpenStackAccountValidateNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewV1OverlordsUIDOpenStackAccountValidateNoContent creates a V1OverlordsUIDOpenStackAccountValidateNoContent with default headers values
func NewV1OverlordsUIDOpenStackAccountValidateNoContent() *V1OverlordsUIDOpenStackAccountValidateNoContent {
	return &V1OverlordsUIDOpenStackAccountValidateNoContent{}
}

/*
V1OverlordsUIDOpenStackAccountValidateNoContent handles this case with default header values.

Ok response without content
*/
type V1OverlordsUIDOpenStackAccountValidateNoContent struct {
	/*Audit uid for the request
	 */
	AuditUID string
}

func (o *V1OverlordsUIDOpenStackAccountValidateNoContent) Error() string {
	return fmt.Sprintf("[POST /v1/overlords/openstack/{uid}/account/validate][%d] v1OverlordsUidOpenStackAccountValidateNoContent ", 204)
}

func (o *V1OverlordsUIDOpenStackAccountValidateNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header AuditUid
	o.AuditUID = response.GetHeader("AuditUid")

	return nil
}

/*
V1OverlordsUIDOpenStackAccountValidateBody v1 overlords UID open stack account validate body
swagger:model V1OverlordsUIDOpenStackAccountValidateBody
*/
type V1OverlordsUIDOpenStackAccountValidateBody struct {

	// account
	Account *models.V1OpenStackCloudAccount `json:"account,omitempty"`
}

// Validate validates this v1 overlords UID open stack account validate body
func (o *V1OverlordsUIDOpenStackAccountValidateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAccount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *V1OverlordsUIDOpenStackAccountValidateBody) validateAccount(formats strfmt.Registry) error {
	if swag.IsZero(o.Account) { // not required
		return nil
	}

	if o.Account != nil {
		if err := o.Account.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "account")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "account")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this v1 overlords UID open stack account validate body based on the context it is used
func (o *V1OverlordsUIDOpenStackAccountValidateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAccount(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *V1OverlordsUIDOpenStackAccountValidateBody) contextValidateAccount(ctx context.Context, formats strfmt.Registry) error {

	if o.Account != nil {

		if swag.IsZero(o.Account) { // not required
			return nil
		}

		if err := o.Account.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "account")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "account")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *V1OverlordsUIDOpenStackAccountValidateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *V1OverlordsUIDOpenStackAccountValidateBody) UnmarshalBinary(b []byte) error {
	var res V1OverlordsUIDOpenStackAccountValidateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
