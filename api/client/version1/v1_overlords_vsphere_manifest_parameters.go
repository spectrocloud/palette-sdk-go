// Code generated by go-swagger; DO NOT EDIT.

package version1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewV1OverlordsVsphereManifestParams creates a new V1OverlordsVsphereManifestParams object
// with the default values initialized.
func NewV1OverlordsVsphereManifestParams() *V1OverlordsVsphereManifestParams {
	var ()
	return &V1OverlordsVsphereManifestParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV1OverlordsVsphereManifestParamsWithTimeout creates a new V1OverlordsVsphereManifestParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1OverlordsVsphereManifestParamsWithTimeout(timeout time.Duration) *V1OverlordsVsphereManifestParams {
	var ()
	return &V1OverlordsVsphereManifestParams{

		timeout: timeout,
	}
}

// NewV1OverlordsVsphereManifestParamsWithContext creates a new V1OverlordsVsphereManifestParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1OverlordsVsphereManifestParamsWithContext(ctx context.Context) *V1OverlordsVsphereManifestParams {
	var ()
	return &V1OverlordsVsphereManifestParams{

		Context: ctx,
	}
}

// NewV1OverlordsVsphereManifestParamsWithHTTPClient creates a new V1OverlordsVsphereManifestParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1OverlordsVsphereManifestParamsWithHTTPClient(client *http.Client) *V1OverlordsVsphereManifestParams {
	var ()
	return &V1OverlordsVsphereManifestParams{
		HTTPClient: client,
	}
}

/*
V1OverlordsVsphereManifestParams contains all the parameters to send to the API endpoint
for the v1 overlords vsphere manifest operation typically these are written to a http.Request
*/
type V1OverlordsVsphereManifestParams struct {

	/*PairingCode*/
	PairingCode string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 overlords vsphere manifest params
func (o *V1OverlordsVsphereManifestParams) WithTimeout(timeout time.Duration) *V1OverlordsVsphereManifestParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 overlords vsphere manifest params
func (o *V1OverlordsVsphereManifestParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 overlords vsphere manifest params
func (o *V1OverlordsVsphereManifestParams) WithContext(ctx context.Context) *V1OverlordsVsphereManifestParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 overlords vsphere manifest params
func (o *V1OverlordsVsphereManifestParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 overlords vsphere manifest params
func (o *V1OverlordsVsphereManifestParams) WithHTTPClient(client *http.Client) *V1OverlordsVsphereManifestParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 overlords vsphere manifest params
func (o *V1OverlordsVsphereManifestParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPairingCode adds the pairingCode to the v1 overlords vsphere manifest params
func (o *V1OverlordsVsphereManifestParams) WithPairingCode(pairingCode string) *V1OverlordsVsphereManifestParams {
	o.SetPairingCode(pairingCode)
	return o
}

// SetPairingCode adds the pairingCode to the v1 overlords vsphere manifest params
func (o *V1OverlordsVsphereManifestParams) SetPairingCode(pairingCode string) {
	o.PairingCode = pairingCode
}

// WriteToRequest writes these params to a swagger request
func (o *V1OverlordsVsphereManifestParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param pairingCode
	qrPairingCode := o.PairingCode
	qPairingCode := qrPairingCode
	if qPairingCode != "" {
		if err := r.SetQueryParam("pairingCode", qPairingCode); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
