// Code generated by go-swagger; DO NOT EDIT.

package version1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewV1PacksNameRegistryUIDListParams creates a new V1PacksNameRegistryUIDListParams object
// with the default values initialized.
func NewV1PacksNameRegistryUIDListParams() *V1PacksNameRegistryUIDListParams {
	var (
		cloudTypeDefault = string("all")
	)
	return &V1PacksNameRegistryUIDListParams{
		CloudType: &cloudTypeDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewV1PacksNameRegistryUIDListParamsWithTimeout creates a new V1PacksNameRegistryUIDListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1PacksNameRegistryUIDListParamsWithTimeout(timeout time.Duration) *V1PacksNameRegistryUIDListParams {
	var (
		cloudTypeDefault = string("all")
	)
	return &V1PacksNameRegistryUIDListParams{
		CloudType: &cloudTypeDefault,

		timeout: timeout,
	}
}

// NewV1PacksNameRegistryUIDListParamsWithContext creates a new V1PacksNameRegistryUIDListParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1PacksNameRegistryUIDListParamsWithContext(ctx context.Context) *V1PacksNameRegistryUIDListParams {
	var (
		cloudTypeDefault = string("all")
	)
	return &V1PacksNameRegistryUIDListParams{
		CloudType: &cloudTypeDefault,

		Context: ctx,
	}
}

// NewV1PacksNameRegistryUIDListParamsWithHTTPClient creates a new V1PacksNameRegistryUIDListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1PacksNameRegistryUIDListParamsWithHTTPClient(client *http.Client) *V1PacksNameRegistryUIDListParams {
	var (
		cloudTypeDefault = string("all")
	)
	return &V1PacksNameRegistryUIDListParams{
		CloudType:  &cloudTypeDefault,
		HTTPClient: client,
	}
}

/*
V1PacksNameRegistryUIDListParams contains all the parameters to send to the API endpoint
for the v1 packs name registry Uid list operation typically these are written to a http.Request
*/
type V1PacksNameRegistryUIDListParams struct {

	/*CloudType
	  Pack cloud type

	*/
	CloudType *string
	/*Layer
	  Pack layer

	*/
	Layer *string
	/*PackName
	  Pack name

	*/
	PackName string
	/*RegistryUID
	  Pack registry uid

	*/
	RegistryUID string
	/*States
	  Comma seperated pack states. Example values are "deprecated" "deprecated,disabled". If states is not specified or empty then by default API will return all packs except "disabled" packs

	*/
	States *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) WithTimeout(timeout time.Duration) *V1PacksNameRegistryUIDListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) WithContext(ctx context.Context) *V1PacksNameRegistryUIDListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) WithHTTPClient(client *http.Client) *V1PacksNameRegistryUIDListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCloudType adds the cloudType to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) WithCloudType(cloudType *string) *V1PacksNameRegistryUIDListParams {
	o.SetCloudType(cloudType)
	return o
}

// SetCloudType adds the cloudType to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) SetCloudType(cloudType *string) {
	o.CloudType = cloudType
}

// WithLayer adds the layer to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) WithLayer(layer *string) *V1PacksNameRegistryUIDListParams {
	o.SetLayer(layer)
	return o
}

// SetLayer adds the layer to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) SetLayer(layer *string) {
	o.Layer = layer
}

// WithPackName adds the packName to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) WithPackName(packName string) *V1PacksNameRegistryUIDListParams {
	o.SetPackName(packName)
	return o
}

// SetPackName adds the packName to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) SetPackName(packName string) {
	o.PackName = packName
}

// WithRegistryUID adds the registryUID to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) WithRegistryUID(registryUID string) *V1PacksNameRegistryUIDListParams {
	o.SetRegistryUID(registryUID)
	return o
}

// SetRegistryUID adds the registryUid to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) SetRegistryUID(registryUID string) {
	o.RegistryUID = registryUID
}

// WithStates adds the states to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) WithStates(states *string) *V1PacksNameRegistryUIDListParams {
	o.SetStates(states)
	return o
}

// SetStates adds the states to the v1 packs name registry Uid list params
func (o *V1PacksNameRegistryUIDListParams) SetStates(states *string) {
	o.States = states
}

// WriteToRequest writes these params to a swagger request
func (o *V1PacksNameRegistryUIDListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CloudType != nil {

		// query param cloudType
		var qrCloudType string
		if o.CloudType != nil {
			qrCloudType = *o.CloudType
		}
		qCloudType := qrCloudType
		if qCloudType != "" {
			if err := r.SetQueryParam("cloudType", qCloudType); err != nil {
				return err
			}
		}

	}

	if o.Layer != nil {

		// query param layer
		var qrLayer string
		if o.Layer != nil {
			qrLayer = *o.Layer
		}
		qLayer := qrLayer
		if qLayer != "" {
			if err := r.SetQueryParam("layer", qLayer); err != nil {
				return err
			}
		}

	}

	// path param packName
	if err := r.SetPathParam("packName", o.PackName); err != nil {
		return err
	}

	// path param registryUid
	if err := r.SetPathParam("registryUid", o.RegistryUID); err != nil {
		return err
	}

	if o.States != nil {

		// query param states
		var qrStates string
		if o.States != nil {
			qrStates = *o.States
		}
		qStates := qrStates
		if qStates != "" {
			if err := r.SetQueryParam("states", qStates); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
