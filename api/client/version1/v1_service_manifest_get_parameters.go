// Code generated by go-swagger; DO NOT EDIT.

package version1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewV1ServiceManifestGetParams creates a new V1ServiceManifestGetParams object
// with the default values initialized.
func NewV1ServiceManifestGetParams() *V1ServiceManifestGetParams {
	var ()
	return &V1ServiceManifestGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV1ServiceManifestGetParamsWithTimeout creates a new V1ServiceManifestGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1ServiceManifestGetParamsWithTimeout(timeout time.Duration) *V1ServiceManifestGetParams {
	var ()
	return &V1ServiceManifestGetParams{

		timeout: timeout,
	}
}

// NewV1ServiceManifestGetParamsWithContext creates a new V1ServiceManifestGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1ServiceManifestGetParamsWithContext(ctx context.Context) *V1ServiceManifestGetParams {
	var ()
	return &V1ServiceManifestGetParams{

		Context: ctx,
	}
}

// NewV1ServiceManifestGetParamsWithHTTPClient creates a new V1ServiceManifestGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1ServiceManifestGetParamsWithHTTPClient(client *http.Client) *V1ServiceManifestGetParams {
	var ()
	return &V1ServiceManifestGetParams{
		HTTPClient: client,
	}
}

/*
V1ServiceManifestGetParams contains all the parameters to send to the API endpoint
for the v1 service manifest get operation typically these are written to a http.Request
*/
type V1ServiceManifestGetParams struct {

	/*Action
	  action type

	*/
	Action string
	/*ClusterUID
	  spectro cluster uid

	*/
	ClusterUID *string
	/*EdgeHostUID
	  edge host uid

	*/
	EdgeHostUID *string
	/*ResourceFilename
	  resource file name

	*/
	ResourceFilename *string
	/*ServiceName
	  service name

	*/
	ServiceName string
	/*Version
	  service version

	*/
	Version string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) WithTimeout(timeout time.Duration) *V1ServiceManifestGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) WithContext(ctx context.Context) *V1ServiceManifestGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) WithHTTPClient(client *http.Client) *V1ServiceManifestGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAction adds the action to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) WithAction(action string) *V1ServiceManifestGetParams {
	o.SetAction(action)
	return o
}

// SetAction adds the action to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) SetAction(action string) {
	o.Action = action
}

// WithClusterUID adds the clusterUID to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) WithClusterUID(clusterUID *string) *V1ServiceManifestGetParams {
	o.SetClusterUID(clusterUID)
	return o
}

// SetClusterUID adds the clusterUid to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) SetClusterUID(clusterUID *string) {
	o.ClusterUID = clusterUID
}

// WithEdgeHostUID adds the edgeHostUID to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) WithEdgeHostUID(edgeHostUID *string) *V1ServiceManifestGetParams {
	o.SetEdgeHostUID(edgeHostUID)
	return o
}

// SetEdgeHostUID adds the edgeHostUid to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) SetEdgeHostUID(edgeHostUID *string) {
	o.EdgeHostUID = edgeHostUID
}

// WithResourceFilename adds the resourceFilename to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) WithResourceFilename(resourceFilename *string) *V1ServiceManifestGetParams {
	o.SetResourceFilename(resourceFilename)
	return o
}

// SetResourceFilename adds the resourceFilename to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) SetResourceFilename(resourceFilename *string) {
	o.ResourceFilename = resourceFilename
}

// WithServiceName adds the serviceName to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) WithServiceName(serviceName string) *V1ServiceManifestGetParams {
	o.SetServiceName(serviceName)
	return o
}

// SetServiceName adds the serviceName to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) SetServiceName(serviceName string) {
	o.ServiceName = serviceName
}

// WithVersion adds the version to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) WithVersion(version string) *V1ServiceManifestGetParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the v1 service manifest get params
func (o *V1ServiceManifestGetParams) SetVersion(version string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *V1ServiceManifestGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param action
	qrAction := o.Action
	qAction := qrAction
	if qAction != "" {
		if err := r.SetQueryParam("action", qAction); err != nil {
			return err
		}
	}

	if o.ClusterUID != nil {

		// query param clusterUid
		var qrClusterUID string
		if o.ClusterUID != nil {
			qrClusterUID = *o.ClusterUID
		}
		qClusterUID := qrClusterUID
		if qClusterUID != "" {
			if err := r.SetQueryParam("clusterUid", qClusterUID); err != nil {
				return err
			}
		}

	}

	if o.EdgeHostUID != nil {

		// query param edgeHostUid
		var qrEdgeHostUID string
		if o.EdgeHostUID != nil {
			qrEdgeHostUID = *o.EdgeHostUID
		}
		qEdgeHostUID := qrEdgeHostUID
		if qEdgeHostUID != "" {
			if err := r.SetQueryParam("edgeHostUid", qEdgeHostUID); err != nil {
				return err
			}
		}

	}

	if o.ResourceFilename != nil {

		// query param resourceFilename
		var qrResourceFilename string
		if o.ResourceFilename != nil {
			qrResourceFilename = *o.ResourceFilename
		}
		qResourceFilename := qrResourceFilename
		if qResourceFilename != "" {
			if err := r.SetQueryParam("resourceFilename", qResourceFilename); err != nil {
				return err
			}
		}

	}

	// path param serviceName
	if err := r.SetPathParam("serviceName", o.ServiceName); err != nil {
		return err
	}

	// path param version
	if err := r.SetPathParam("version", o.Version); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
