// Code generated by go-swagger; DO NOT EDIT.

package version1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewV1AzureClusterNameValidateParams creates a new V1AzureClusterNameValidateParams object
// with the default values initialized.
func NewV1AzureClusterNameValidateParams() *V1AzureClusterNameValidateParams {
	var ()
	return &V1AzureClusterNameValidateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV1AzureClusterNameValidateParamsWithTimeout creates a new V1AzureClusterNameValidateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1AzureClusterNameValidateParamsWithTimeout(timeout time.Duration) *V1AzureClusterNameValidateParams {
	var ()
	return &V1AzureClusterNameValidateParams{

		timeout: timeout,
	}
}

// NewV1AzureClusterNameValidateParamsWithContext creates a new V1AzureClusterNameValidateParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1AzureClusterNameValidateParamsWithContext(ctx context.Context) *V1AzureClusterNameValidateParams {
	var ()
	return &V1AzureClusterNameValidateParams{

		Context: ctx,
	}
}

// NewV1AzureClusterNameValidateParamsWithHTTPClient creates a new V1AzureClusterNameValidateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1AzureClusterNameValidateParamsWithHTTPClient(client *http.Client) *V1AzureClusterNameValidateParams {
	var ()
	return &V1AzureClusterNameValidateParams{
		HTTPClient: client,
	}
}

/*
V1AzureClusterNameValidateParams contains all the parameters to send to the API endpoint
for the v1 azure cluster name validate operation typically these are written to a http.Request
*/
type V1AzureClusterNameValidateParams struct {

	/*CloudAccountUID
	  Uid for the specific Azure cloud account

	*/
	CloudAccountUID string
	/*Name
	  cluster name to be validated

	*/
	Name string
	/*Region
	  region in which cluster name is to be validated

	*/
	Region string
	/*ResourceGroup
	  resourceGroup in which cluster name is to be validated

	*/
	ResourceGroup string
	/*SubscriptionID
	  subscriptionId in which cluster name is to be validated

	*/
	SubscriptionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) WithTimeout(timeout time.Duration) *V1AzureClusterNameValidateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) WithContext(ctx context.Context) *V1AzureClusterNameValidateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) WithHTTPClient(client *http.Client) *V1AzureClusterNameValidateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCloudAccountUID adds the cloudAccountUID to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) WithCloudAccountUID(cloudAccountUID string) *V1AzureClusterNameValidateParams {
	o.SetCloudAccountUID(cloudAccountUID)
	return o
}

// SetCloudAccountUID adds the cloudAccountUid to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) SetCloudAccountUID(cloudAccountUID string) {
	o.CloudAccountUID = cloudAccountUID
}

// WithName adds the name to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) WithName(name string) *V1AzureClusterNameValidateParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) SetName(name string) {
	o.Name = name
}

// WithRegion adds the region to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) WithRegion(region string) *V1AzureClusterNameValidateParams {
	o.SetRegion(region)
	return o
}

// SetRegion adds the region to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) SetRegion(region string) {
	o.Region = region
}

// WithResourceGroup adds the resourceGroup to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) WithResourceGroup(resourceGroup string) *V1AzureClusterNameValidateParams {
	o.SetResourceGroup(resourceGroup)
	return o
}

// SetResourceGroup adds the resourceGroup to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) SetResourceGroup(resourceGroup string) {
	o.ResourceGroup = resourceGroup
}

// WithSubscriptionID adds the subscriptionID to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) WithSubscriptionID(subscriptionID string) *V1AzureClusterNameValidateParams {
	o.SetSubscriptionID(subscriptionID)
	return o
}

// SetSubscriptionID adds the subscriptionId to the v1 azure cluster name validate params
func (o *V1AzureClusterNameValidateParams) SetSubscriptionID(subscriptionID string) {
	o.SubscriptionID = subscriptionID
}

// WriteToRequest writes these params to a swagger request
func (o *V1AzureClusterNameValidateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param cloudAccountUid
	qrCloudAccountUID := o.CloudAccountUID
	qCloudAccountUID := qrCloudAccountUID
	if qCloudAccountUID != "" {
		if err := r.SetQueryParam("cloudAccountUid", qCloudAccountUID); err != nil {
			return err
		}
	}

	// query param name
	qrName := o.Name
	qName := qrName
	if qName != "" {
		if err := r.SetQueryParam("name", qName); err != nil {
			return err
		}
	}

	// path param region
	if err := r.SetPathParam("region", o.Region); err != nil {
		return err
	}

	// query param resourceGroup
	qrResourceGroup := o.ResourceGroup
	qResourceGroup := qrResourceGroup
	if qResourceGroup != "" {
		if err := r.SetQueryParam("resourceGroup", qResourceGroup); err != nil {
			return err
		}
	}

	// path param subscriptionId
	if err := r.SetPathParam("subscriptionId", o.SubscriptionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
