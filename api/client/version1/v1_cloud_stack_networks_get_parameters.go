// Code generated by go-swagger; DO NOT EDIT.

package version1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewV1CloudStackNetworksGetParams creates a new V1CloudStackNetworksGetParams object
// with the default values initialized.
func NewV1CloudStackNetworksGetParams() *V1CloudStackNetworksGetParams {
	var ()
	return &V1CloudStackNetworksGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV1CloudStackNetworksGetParamsWithTimeout creates a new V1CloudStackNetworksGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1CloudStackNetworksGetParamsWithTimeout(timeout time.Duration) *V1CloudStackNetworksGetParams {
	var ()
	return &V1CloudStackNetworksGetParams{

		timeout: timeout,
	}
}

// NewV1CloudStackNetworksGetParamsWithContext creates a new V1CloudStackNetworksGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1CloudStackNetworksGetParamsWithContext(ctx context.Context) *V1CloudStackNetworksGetParams {
	var ()
	return &V1CloudStackNetworksGetParams{

		Context: ctx,
	}
}

// NewV1CloudStackNetworksGetParamsWithHTTPClient creates a new V1CloudStackNetworksGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1CloudStackNetworksGetParamsWithHTTPClient(client *http.Client) *V1CloudStackNetworksGetParams {
	var ()
	return &V1CloudStackNetworksGetParams{
		HTTPClient: client,
	}
}

/*
V1CloudStackNetworksGetParams contains all the parameters to send to the API endpoint
for the v1 cloud stack networks get operation typically these are written to a http.Request
*/
type V1CloudStackNetworksGetParams struct {

	/*CloudAccountUID
	  Uid for the specific CloudStack cloud account

	*/
	CloudAccountUID *string
	/*DomainID
	  Domain ID for which CloudStack networks are requested

	*/
	DomainID *string
	/*ProjectID
	  Project ID for which CloudStack networks are requested

	*/
	ProjectID *string
	/*VpcID
	  VPC ID for which CloudStack networks are requested

	*/
	VpcID *string
	/*Zone
	  Zone for which CloudStack networks are requested

	*/
	Zone *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) WithTimeout(timeout time.Duration) *V1CloudStackNetworksGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) WithContext(ctx context.Context) *V1CloudStackNetworksGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) WithHTTPClient(client *http.Client) *V1CloudStackNetworksGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCloudAccountUID adds the cloudAccountUID to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) WithCloudAccountUID(cloudAccountUID *string) *V1CloudStackNetworksGetParams {
	o.SetCloudAccountUID(cloudAccountUID)
	return o
}

// SetCloudAccountUID adds the cloudAccountUid to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) SetCloudAccountUID(cloudAccountUID *string) {
	o.CloudAccountUID = cloudAccountUID
}

// WithDomainID adds the domainID to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) WithDomainID(domainID *string) *V1CloudStackNetworksGetParams {
	o.SetDomainID(domainID)
	return o
}

// SetDomainID adds the domainId to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) SetDomainID(domainID *string) {
	o.DomainID = domainID
}

// WithProjectID adds the projectID to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) WithProjectID(projectID *string) *V1CloudStackNetworksGetParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) SetProjectID(projectID *string) {
	o.ProjectID = projectID
}

// WithVpcID adds the vpcID to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) WithVpcID(vpcID *string) *V1CloudStackNetworksGetParams {
	o.SetVpcID(vpcID)
	return o
}

// SetVpcID adds the vpcId to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) SetVpcID(vpcID *string) {
	o.VpcID = vpcID
}

// WithZone adds the zone to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) WithZone(zone *string) *V1CloudStackNetworksGetParams {
	o.SetZone(zone)
	return o
}

// SetZone adds the zone to the v1 cloud stack networks get params
func (o *V1CloudStackNetworksGetParams) SetZone(zone *string) {
	o.Zone = zone
}

// WriteToRequest writes these params to a swagger request
func (o *V1CloudStackNetworksGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CloudAccountUID != nil {

		// query param cloudAccountUid
		var qrCloudAccountUID string
		if o.CloudAccountUID != nil {
			qrCloudAccountUID = *o.CloudAccountUID
		}
		qCloudAccountUID := qrCloudAccountUID
		if qCloudAccountUID != "" {
			if err := r.SetQueryParam("cloudAccountUid", qCloudAccountUID); err != nil {
				return err
			}
		}

	}

	if o.DomainID != nil {

		// query param domainId
		var qrDomainID string
		if o.DomainID != nil {
			qrDomainID = *o.DomainID
		}
		qDomainID := qrDomainID
		if qDomainID != "" {
			if err := r.SetQueryParam("domainId", qDomainID); err != nil {
				return err
			}
		}

	}

	if o.ProjectID != nil {

		// query param projectId
		var qrProjectID string
		if o.ProjectID != nil {
			qrProjectID = *o.ProjectID
		}
		qProjectID := qrProjectID
		if qProjectID != "" {
			if err := r.SetQueryParam("projectId", qProjectID); err != nil {
				return err
			}
		}

	}

	if o.VpcID != nil {

		// query param vpcId
		var qrVpcID string
		if o.VpcID != nil {
			qrVpcID = *o.VpcID
		}
		qVpcID := qrVpcID
		if qVpcID != "" {
			if err := r.SetQueryParam("vpcId", qVpcID); err != nil {
				return err
			}
		}

	}

	if o.Zone != nil {

		// query param zone
		var qrZone string
		if o.Zone != nil {
			qrZone = *o.Zone
		}
		qZone := qrZone
		if qZone != "" {
			if err := r.SetQueryParam("zone", qZone); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
