// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1ProfileType v1 profile type
//
// swagger:model v1ProfileType
type V1ProfileType string

const (

	// V1ProfileTypeCluster captures enum value "cluster"
	V1ProfileTypeCluster V1ProfileType = "cluster"

	// V1ProfileTypeInfra captures enum value "infra"
	V1ProfileTypeInfra V1ProfileType = "infra"

	// V1ProfileTypeAddOn captures enum value "add-on"
	V1ProfileTypeAddOn V1ProfileType = "add-on"

	// V1ProfileTypeSystem captures enum value "system"
	V1ProfileTypeSystem V1ProfileType = "system"
)

// for schema
var v1ProfileTypeEnum []interface{}

func init() {
	var res []V1ProfileType
	if err := json.Unmarshal([]byte(`["cluster","infra","add-on","system"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1ProfileTypeEnum = append(v1ProfileTypeEnum, v)
	}
}

func (m V1ProfileType) validateV1ProfileTypeEnum(path, location string, value V1ProfileType) error {
	if err := validate.EnumCase(path, location, value, v1ProfileTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 profile type
func (m V1ProfileType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1ProfileTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
