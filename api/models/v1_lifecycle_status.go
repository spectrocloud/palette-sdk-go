// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1LifecycleStatus v1 lifecycle status
//
// swagger:model v1LifecycleStatus
type V1LifecycleStatus struct {

	// error or success msg of lifecycle
	Msg string `json:"msg,omitempty"`

	// lifecycle status
	// Enum: ["Pausing","Paused","Resuming","Running","Error"]
	Status string `json:"status,omitempty"`
}

// Validate validates this v1 lifecycle status
func (m *V1LifecycleStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v1LifecycleStatusTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Pausing","Paused","Resuming","Running","Error"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1LifecycleStatusTypeStatusPropEnum = append(v1LifecycleStatusTypeStatusPropEnum, v)
	}
}

const (

	// V1LifecycleStatusStatusPausing captures enum value "Pausing"
	V1LifecycleStatusStatusPausing string = "Pausing"

	// V1LifecycleStatusStatusPaused captures enum value "Paused"
	V1LifecycleStatusStatusPaused string = "Paused"

	// V1LifecycleStatusStatusResuming captures enum value "Resuming"
	V1LifecycleStatusStatusResuming string = "Resuming"

	// V1LifecycleStatusStatusRunning captures enum value "Running"
	V1LifecycleStatusStatusRunning string = "Running"

	// V1LifecycleStatusStatusError captures enum value "Error"
	V1LifecycleStatusStatusError string = "Error"
)

// prop value enum
func (m *V1LifecycleStatus) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, v1LifecycleStatusTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V1LifecycleStatus) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 lifecycle status based on context it is used
func (m *V1LifecycleStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1LifecycleStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1LifecycleStatus) UnmarshalBinary(b []byte) error {
	var res V1LifecycleStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
