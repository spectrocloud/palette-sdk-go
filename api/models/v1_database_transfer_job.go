// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1DatabaseTransferJob database transfer job details
//
// swagger:model v1DatabaseTransferJob
type V1DatabaseTransferJob struct {

	// backup status
	BackupStatus *V1TransferJob `json:"backupStatus,omitempty"`

	// backup Uid
	BackupUID string `json:"backupUid,omitempty"`

	// mode
	// Enum: [FileSystem Ftp]
	Mode string `json:"mode,omitempty"`
}

// Validate validates this v1 database transfer job
func (m *V1DatabaseTransferJob) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBackupStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1DatabaseTransferJob) validateBackupStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.BackupStatus) { // not required
		return nil
	}

	if m.BackupStatus != nil {
		if err := m.BackupStatus.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("backupStatus")
			}
			return err
		}
	}

	return nil
}

var v1DatabaseTransferJobTypeModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["FileSystem","Ftp"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1DatabaseTransferJobTypeModePropEnum = append(v1DatabaseTransferJobTypeModePropEnum, v)
	}
}

const (

	// V1DatabaseTransferJobModeFileSystem captures enum value "FileSystem"
	V1DatabaseTransferJobModeFileSystem string = "FileSystem"

	// V1DatabaseTransferJobModeFtp captures enum value "Ftp"
	V1DatabaseTransferJobModeFtp string = "Ftp"
)

// prop value enum
func (m *V1DatabaseTransferJob) validateModeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, v1DatabaseTransferJobTypeModePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V1DatabaseTransferJob) validateMode(formats strfmt.Registry) error {

	if swag.IsZero(m.Mode) { // not required
		return nil
	}

	// value enum
	if err := m.validateModeEnum("mode", "body", m.Mode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1DatabaseTransferJob) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1DatabaseTransferJob) UnmarshalBinary(b []byte) error {
	var res V1DatabaseTransferJob
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
