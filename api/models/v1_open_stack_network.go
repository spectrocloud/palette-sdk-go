// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1OpenStackNetwork OpenStack network
//
// swagger:model v1OpenStackNetwork
type V1OpenStackNetwork struct {

	// Description of OpenStack network
	Description string `json:"description,omitempty"`

	// Id of OpenStack network
	ID string `json:"id,omitempty"`

	// Name of OpenStack network
	Name string `json:"name,omitempty"`

	// Subnets associated with OpenStack network
	// Unique: true
	Subnets []*V1OpenStackSubnet `json:"subnets"`
}

// Validate validates this v1 open stack network
func (m *V1OpenStackNetwork) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSubnets(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1OpenStackNetwork) validateSubnets(formats strfmt.Registry) error {

	if swag.IsZero(m.Subnets) { // not required
		return nil
	}

	if err := validate.UniqueItems("subnets", "body", m.Subnets); err != nil {
		return err
	}

	for i := 0; i < len(m.Subnets); i++ {
		if swag.IsZero(m.Subnets[i]) { // not required
			continue
		}

		if m.Subnets[i] != nil {
			if err := m.Subnets[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("subnets" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1OpenStackNetwork) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1OpenStackNetwork) UnmarshalBinary(b []byte) error {
	var res V1OpenStackNetwork
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
