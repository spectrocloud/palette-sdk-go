// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1EdgeHostsMetadataSpec v1 edge hosts metadata spec
//
// swagger:model v1EdgeHostsMetadataSpec
type V1EdgeHostsMetadataSpec struct {

	// cluster profile templates
	ClusterProfileTemplates []*V1ProfileTemplateSummary `json:"clusterProfileTemplates"`

	// device
	Device *V1DeviceSpec `json:"device,omitempty"`

	// host
	Host *V1EdgeHostSpecHost `json:"host,omitempty"`

	// project meta
	ProjectMeta *V1ProjectMeta `json:"projectMeta,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this v1 edge hosts metadata spec
func (m *V1EdgeHostsMetadataSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClusterProfileTemplates(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDevice(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHost(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProjectMeta(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1EdgeHostsMetadataSpec) validateClusterProfileTemplates(formats strfmt.Registry) error {

	if swag.IsZero(m.ClusterProfileTemplates) { // not required
		return nil
	}

	for i := 0; i < len(m.ClusterProfileTemplates); i++ {
		if swag.IsZero(m.ClusterProfileTemplates[i]) { // not required
			continue
		}

		if m.ClusterProfileTemplates[i] != nil {
			if err := m.ClusterProfileTemplates[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("clusterProfileTemplates" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *V1EdgeHostsMetadataSpec) validateDevice(formats strfmt.Registry) error {

	if swag.IsZero(m.Device) { // not required
		return nil
	}

	if m.Device != nil {
		if err := m.Device.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("device")
			}
			return err
		}
	}

	return nil
}

func (m *V1EdgeHostsMetadataSpec) validateHost(formats strfmt.Registry) error {

	if swag.IsZero(m.Host) { // not required
		return nil
	}

	if m.Host != nil {
		if err := m.Host.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("host")
			}
			return err
		}
	}

	return nil
}

func (m *V1EdgeHostsMetadataSpec) validateProjectMeta(formats strfmt.Registry) error {

	if swag.IsZero(m.ProjectMeta) { // not required
		return nil
	}

	if m.ProjectMeta != nil {
		if err := m.ProjectMeta.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("projectMeta")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1EdgeHostsMetadataSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1EdgeHostsMetadataSpec) UnmarshalBinary(b []byte) error {
	var res V1EdgeHostsMetadataSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
