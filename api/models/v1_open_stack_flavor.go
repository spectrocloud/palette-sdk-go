// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1OpenStackFlavor OpenStack flavor entity. Flavor represent (virtual) hardware configurations for server resources
//
// swagger:model v1OpenStackFlavor
type V1OpenStackFlavor struct {

	// Disk is the amount of root disk, measured in GB
	Disk int64 `json:"disk,omitempty"`

	// Ephemeral is the amount of ephemeral disk space, measured in GB
	Ephemeral int64 `json:"ephemeral,omitempty"`

	// ID is the flavor's unique ID
	ID string `json:"id,omitempty"`

	// Amount of memory, measured in MB
	Memory int64 `json:"memory,omitempty"`

	// Name is the name of the flavor
	Name string `json:"name,omitempty"`

	// VCPUs indicates how many (virtual) CPUs are available for this flavor
	Vcpus int64 `json:"vcpus,omitempty"`
}

// Validate validates this v1 open stack flavor
func (m *V1OpenStackFlavor) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1 open stack flavor based on context it is used
func (m *V1OpenStackFlavor) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1OpenStackFlavor) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1OpenStackFlavor) UnmarshalBinary(b []byte) error {
	var res V1OpenStackFlavor
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
