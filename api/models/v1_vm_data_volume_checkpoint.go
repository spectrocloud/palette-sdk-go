// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1VMDataVolumeCheckpoint DataVolumeCheckpoint defines a stage in a warm migration.
//
// swagger:model v1VmDataVolumeCheckpoint
type V1VMDataVolumeCheckpoint struct {

	// Current is the identifier of the snapshot created for this checkpoint.
	// Required: true
	Current *string `json:"current"`

	// Previous is the identifier of the snapshot from the previous checkpoint.
	// Required: true
	Previous *string `json:"previous"`
}

// Validate validates this v1 Vm data volume checkpoint
func (m *V1VMDataVolumeCheckpoint) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCurrent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrevious(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1VMDataVolumeCheckpoint) validateCurrent(formats strfmt.Registry) error {

	if err := validate.Required("current", "body", m.Current); err != nil {
		return err
	}

	return nil
}

func (m *V1VMDataVolumeCheckpoint) validatePrevious(formats strfmt.Registry) error {

	if err := validate.Required("previous", "body", m.Previous); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1VMDataVolumeCheckpoint) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1VMDataVolumeCheckpoint) UnmarshalBinary(b []byte) error {
	var res V1VMDataVolumeCheckpoint
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
