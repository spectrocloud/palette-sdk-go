// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1SystemOidcClientSpec system sso oidc config spec
//
// swagger:model v1SystemOidcClientSpec
type V1SystemOidcClientSpec struct {

	// callback Url
	CallbackURL string `json:"callbackUrl"`

	// client Id
	ClientID string `json:"clientId"`

	// client secret
	ClientSecret string `json:"clientSecret"`

	// is enabled
	IsEnabled bool `json:"isEnabled"`

	// the issuer is the URL identifier for the service
	IssuerURL string `json:"issuerUrl"`

	// logo Url
	LogoURL string `json:"logoUrl"`

	// required claims
	RequiredClaims *V1SystemOidcClaims `json:"requiredClaims,omitempty"`

	// scopes
	Scopes []string `json:"scopes"`
}

// Validate validates this v1 system oidc client spec
func (m *V1SystemOidcClientSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRequiredClaims(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1SystemOidcClientSpec) validateRequiredClaims(formats strfmt.Registry) error {

	if swag.IsZero(m.RequiredClaims) { // not required
		return nil
	}

	if m.RequiredClaims != nil {
		if err := m.RequiredClaims.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("requiredClaims")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1SystemOidcClientSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1SystemOidcClientSpec) UnmarshalBinary(b []byte) error {
	var res V1SystemOidcClientSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
