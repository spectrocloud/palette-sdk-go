// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1SpcPolicySortFields v1 spc policy sort fields
//
// swagger:model v1SpcPolicySortFields
type V1SpcPolicySortFields string

func NewV1SpcPolicySortFields(value V1SpcPolicySortFields) *V1SpcPolicySortFields {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1SpcPolicySortFields.
func (m V1SpcPolicySortFields) Pointer() *V1SpcPolicySortFields {
	return &m
}

const (

	// V1SpcPolicySortFieldsPolicyName captures enum value "policyName"
	V1SpcPolicySortFieldsPolicyName V1SpcPolicySortFields = "policyName"

	// V1SpcPolicySortFieldsPolicyType captures enum value "policyType"
	V1SpcPolicySortFieldsPolicyType V1SpcPolicySortFields = "policyType"

	// V1SpcPolicySortFieldsCreationTimestamp captures enum value "creationTimestamp"
	V1SpcPolicySortFieldsCreationTimestamp V1SpcPolicySortFields = "creationTimestamp"

	// V1SpcPolicySortFieldsLastModifiedTimestamp captures enum value "lastModifiedTimestamp"
	V1SpcPolicySortFieldsLastModifiedTimestamp V1SpcPolicySortFields = "lastModifiedTimestamp"
)

// for schema
var v1SpcPolicySortFieldsEnum []interface{}

func init() {
	var res []V1SpcPolicySortFields
	if err := json.Unmarshal([]byte(`["policyName","policyType","creationTimestamp","lastModifiedTimestamp"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1SpcPolicySortFieldsEnum = append(v1SpcPolicySortFieldsEnum, v)
	}
}

func (m V1SpcPolicySortFields) validateV1SpcPolicySortFieldsEnum(path, location string, value V1SpcPolicySortFields) error {
	if err := validate.EnumCase(path, location, value, v1SpcPolicySortFieldsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 spc policy sort fields
func (m V1SpcPolicySortFields) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1SpcPolicySortFieldsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 spc policy sort fields based on context it is used
func (m V1SpcPolicySortFields) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
