// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1ClusterRbacSubjects Cluster role ref
//
// swagger:model v1ClusterRbacSubjects
type V1ClusterRbacSubjects struct {

	// name
	Name string `json:"name,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// type
	// Enum: ["User","Group","ServiceAccount"]
	Type string `json:"type,omitempty"`
}

// Validate validates this v1 cluster rbac subjects
func (m *V1ClusterRbacSubjects) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v1ClusterRbacSubjectsTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["User","Group","ServiceAccount"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1ClusterRbacSubjectsTypeTypePropEnum = append(v1ClusterRbacSubjectsTypeTypePropEnum, v)
	}
}

const (

	// V1ClusterRbacSubjectsTypeUser captures enum value "User"
	V1ClusterRbacSubjectsTypeUser string = "User"

	// V1ClusterRbacSubjectsTypeGroup captures enum value "Group"
	V1ClusterRbacSubjectsTypeGroup string = "Group"

	// V1ClusterRbacSubjectsTypeServiceAccount captures enum value "ServiceAccount"
	V1ClusterRbacSubjectsTypeServiceAccount string = "ServiceAccount"
)

// prop value enum
func (m *V1ClusterRbacSubjects) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, v1ClusterRbacSubjectsTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V1ClusterRbacSubjects) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 cluster rbac subjects based on context it is used
func (m *V1ClusterRbacSubjects) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1ClusterRbacSubjects) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ClusterRbacSubjects) UnmarshalBinary(b []byte) error {
	var res V1ClusterRbacSubjects
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
