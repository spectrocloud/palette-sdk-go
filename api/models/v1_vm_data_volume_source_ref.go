// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1VMDataVolumeSourceRef DataVolumeSourceRef defines an indirect reference to the source of data for the DataVolume
//
// swagger:model v1VmDataVolumeSourceRef
type V1VMDataVolumeSourceRef struct {

	// The kind of the source reference, currently only "DataSource" is supported
	// Required: true
	Kind *string `json:"kind"`

	// The name of the source reference
	// Required: true
	Name *string `json:"name"`

	// The namespace of the source reference, defaults to the DataVolume namespace
	Namespace string `json:"namespace,omitempty"`
}

// Validate validates this v1 Vm data volume source ref
func (m *V1VMDataVolumeSourceRef) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKind(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1VMDataVolumeSourceRef) validateKind(formats strfmt.Registry) error {

	if err := validate.Required("kind", "body", m.Kind); err != nil {
		return err
	}

	return nil
}

func (m *V1VMDataVolumeSourceRef) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1VMDataVolumeSourceRef) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1VMDataVolumeSourceRef) UnmarshalBinary(b []byte) error {
	var res V1VMDataVolumeSourceRef
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
