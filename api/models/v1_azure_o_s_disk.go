// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1AzureOSDisk v1 azure o s disk
//
// swagger:model v1AzureOSDisk
type V1AzureOSDisk struct {

	// disk size g b
	DiskSizeGB int32 `json:"diskSizeGB,omitempty"`

	// managed disk
	ManagedDisk *V1ManagedDisk `json:"managedDisk,omitempty"`

	// os type
	OsType V1OsType `json:"osType,omitempty"`
}

// Validate validates this v1 azure o s disk
func (m *V1AzureOSDisk) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateManagedDisk(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOsType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1AzureOSDisk) validateManagedDisk(formats strfmt.Registry) error {

	if swag.IsZero(m.ManagedDisk) { // not required
		return nil
	}

	if m.ManagedDisk != nil {
		if err := m.ManagedDisk.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("managedDisk")
			}
			return err
		}
	}

	return nil
}

func (m *V1AzureOSDisk) validateOsType(formats strfmt.Registry) error {

	if swag.IsZero(m.OsType) { // not required
		return nil
	}

	if err := m.OsType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("osType")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1AzureOSDisk) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1AzureOSDisk) UnmarshalBinary(b []byte) error {
	var res V1AzureOSDisk
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
