// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1GrpcEndpoint v1 grpc endpoint
//
// swagger:model v1GrpcEndpoint
type V1GrpcEndpoint struct {

	// Describes the URL where the client has to connect to the grpc server
	Endpoint string `json:"endpoint,omitempty"`

	// tls
	TLS *V1GrpcEndpointTLS `json:"tls,omitempty"`
}

// Validate validates this v1 grpc endpoint
func (m *V1GrpcEndpoint) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTLS(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1GrpcEndpoint) validateTLS(formats strfmt.Registry) error {

	if swag.IsZero(m.TLS) { // not required
		return nil
	}

	if m.TLS != nil {
		if err := m.TLS.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tls")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1GrpcEndpoint) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1GrpcEndpoint) UnmarshalBinary(b []byte) error {
	var res V1GrpcEndpoint
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// V1GrpcEndpointTLS Describes the Grpc tls config which client will use to make a request to the grpc server
//
// swagger:model V1GrpcEndpointTLS
type V1GrpcEndpointTLS struct {

	// ca cert
	CaCert string `json:"caCert,omitempty"`

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// insecure skip verify
	InsecureSkipVerify bool `json:"insecureSkipVerify,omitempty"`
}

// Validate validates this v1 grpc endpoint TLS
func (m *V1GrpcEndpointTLS) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1GrpcEndpointTLS) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1GrpcEndpointTLS) UnmarshalBinary(b []byte) error {
	var res V1GrpcEndpointTLS
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
