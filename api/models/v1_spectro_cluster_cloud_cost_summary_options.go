// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1SpectroClusterCloudCostSummaryOptions Spectro cluster cloud cost summary options
//
// swagger:model v1SpectroClusterCloudCostSummaryOptions
type V1SpectroClusterCloudCostSummaryOptions struct {

	// group by
	// Enum: [tenant project cloud cluster]
	GroupBy *string `json:"groupBy,omitempty"`

	// period
	Period *int32 `json:"period,omitempty"`
}

// Validate validates this v1 spectro cluster cloud cost summary options
func (m *V1SpectroClusterCloudCostSummaryOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGroupBy(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v1SpectroClusterCloudCostSummaryOptionsTypeGroupByPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["tenant","project","cloud","cluster"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1SpectroClusterCloudCostSummaryOptionsTypeGroupByPropEnum = append(v1SpectroClusterCloudCostSummaryOptionsTypeGroupByPropEnum, v)
	}
}

const (

	// V1SpectroClusterCloudCostSummaryOptionsGroupByTenant captures enum value "tenant"
	V1SpectroClusterCloudCostSummaryOptionsGroupByTenant string = "tenant"

	// V1SpectroClusterCloudCostSummaryOptionsGroupByProject captures enum value "project"
	V1SpectroClusterCloudCostSummaryOptionsGroupByProject string = "project"

	// V1SpectroClusterCloudCostSummaryOptionsGroupByCloud captures enum value "cloud"
	V1SpectroClusterCloudCostSummaryOptionsGroupByCloud string = "cloud"

	// V1SpectroClusterCloudCostSummaryOptionsGroupByCluster captures enum value "cluster"
	V1SpectroClusterCloudCostSummaryOptionsGroupByCluster string = "cluster"
)

// prop value enum
func (m *V1SpectroClusterCloudCostSummaryOptions) validateGroupByEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, v1SpectroClusterCloudCostSummaryOptionsTypeGroupByPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V1SpectroClusterCloudCostSummaryOptions) validateGroupBy(formats strfmt.Registry) error {

	if swag.IsZero(m.GroupBy) { // not required
		return nil
	}

	// value enum
	if err := m.validateGroupByEnum("groupBy", "body", *m.GroupBy); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1SpectroClusterCloudCostSummaryOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1SpectroClusterCloudCostSummaryOptions) UnmarshalBinary(b []byte) error {
	var res V1SpectroClusterCloudCostSummaryOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
