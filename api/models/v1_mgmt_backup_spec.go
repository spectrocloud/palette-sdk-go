// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1MgmtBackupSpec backup spec
//
// swagger:model v1MgmtBackupSpec
type V1MgmtBackupSpec struct {

	// backup Uid
	BackupUID string `json:"backupUid,omitempty"`

	// mode
	Mode string `json:"mode,omitempty"`

	// mode Uid
	ModeUID string `json:"modeUid,omitempty"`

	// proxy information if applicable
	Proxy string `json:"proxy,omitempty"`

	// schedule time
	// Format: date-time
	ScheduleTime V1Time `json:"scheduleTime,omitempty"`

	// schedule type
	// Enum: [OnDemand Automated]
	ScheduleType *string `json:"scheduleType,omitempty"`
}

// Validate validates this v1 mgmt backup spec
func (m *V1MgmtBackupSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateScheduleTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateScheduleType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1MgmtBackupSpec) validateScheduleTime(formats strfmt.Registry) error {

	if swag.IsZero(m.ScheduleTime) { // not required
		return nil
	}

	if err := m.ScheduleTime.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("scheduleTime")
		}
		return err
	}

	return nil
}

var v1MgmtBackupSpecTypeScheduleTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["OnDemand","Automated"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1MgmtBackupSpecTypeScheduleTypePropEnum = append(v1MgmtBackupSpecTypeScheduleTypePropEnum, v)
	}
}

const (

	// V1MgmtBackupSpecScheduleTypeOnDemand captures enum value "OnDemand"
	V1MgmtBackupSpecScheduleTypeOnDemand string = "OnDemand"

	// V1MgmtBackupSpecScheduleTypeAutomated captures enum value "Automated"
	V1MgmtBackupSpecScheduleTypeAutomated string = "Automated"
)

// prop value enum
func (m *V1MgmtBackupSpec) validateScheduleTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, v1MgmtBackupSpecTypeScheduleTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V1MgmtBackupSpec) validateScheduleType(formats strfmt.Registry) error {

	if swag.IsZero(m.ScheduleType) { // not required
		return nil
	}

	// value enum
	if err := m.validateScheduleTypeEnum("scheduleType", "body", *m.ScheduleType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1MgmtBackupSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1MgmtBackupSpec) UnmarshalBinary(b []byte) error {
	var res V1MgmtBackupSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
