// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1HostClusterEndpoint v1 host cluster endpoint
//
// swagger:model v1HostClusterEndpoint
type V1HostClusterEndpoint struct {

	// config
	Config *V1HostClusterEndpointConfig `json:"config,omitempty"`

	// is enabled as host cluster
	// Enum: [Ingress LoadBalancer]
	Type string `json:"type,omitempty"`
}

// Validate validates this v1 host cluster endpoint
func (m *V1HostClusterEndpoint) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConfig(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1HostClusterEndpoint) validateConfig(formats strfmt.Registry) error {

	if swag.IsZero(m.Config) { // not required
		return nil
	}

	if m.Config != nil {
		if err := m.Config.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("config")
			}
			return err
		}
	}

	return nil
}

var v1HostClusterEndpointTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Ingress","LoadBalancer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1HostClusterEndpointTypeTypePropEnum = append(v1HostClusterEndpointTypeTypePropEnum, v)
	}
}

const (

	// V1HostClusterEndpointTypeIngress captures enum value "Ingress"
	V1HostClusterEndpointTypeIngress string = "Ingress"

	// V1HostClusterEndpointTypeLoadBalancer captures enum value "LoadBalancer"
	V1HostClusterEndpointTypeLoadBalancer string = "LoadBalancer"
)

// prop value enum
func (m *V1HostClusterEndpoint) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, v1HostClusterEndpointTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V1HostClusterEndpoint) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1HostClusterEndpoint) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1HostClusterEndpoint) UnmarshalBinary(b []byte) error {
	var res V1HostClusterEndpoint
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
