// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1NotificationEvent Describes notification event details
//
// swagger:model v1NotificationEvent
type V1NotificationEvent struct {

	// Describes component of notification event
	Component string `json:"component,omitempty"`

	// Describes notification event digest
	Digest string `json:"digest,omitempty"`

	// Describes a information for the notification event
	Message string `json:"message,omitempty"`

	// Describes a event messages with meta digest as the key
	Meta map[string]string `json:"meta,omitempty"`

	// Describes notification event type
	// Enum: [NotificationPackSync NotificationClusterProfileSync]
	Type string `json:"type,omitempty"`
}

// Validate validates this v1 notification event
func (m *V1NotificationEvent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v1NotificationEventTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NotificationPackSync","NotificationClusterProfileSync"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1NotificationEventTypeTypePropEnum = append(v1NotificationEventTypeTypePropEnum, v)
	}
}

const (

	// V1NotificationEventTypeNotificationPackSync captures enum value "NotificationPackSync"
	V1NotificationEventTypeNotificationPackSync string = "NotificationPackSync"

	// V1NotificationEventTypeNotificationClusterProfileSync captures enum value "NotificationClusterProfileSync"
	V1NotificationEventTypeNotificationClusterProfileSync string = "NotificationClusterProfileSync"
)

// prop value enum
func (m *V1NotificationEvent) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, v1NotificationEventTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V1NotificationEvent) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1NotificationEvent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1NotificationEvent) UnmarshalBinary(b []byte) error {
	var res V1NotificationEvent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
