// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1SystemGitAuthSpec system git auth account specifications
//
// swagger:model v1SystemGitAuthSpec
type V1SystemGitAuthSpec struct {

	// type
	Type string `json:"_type,omitempty"`

	// password
	Password string `json:"password,omitempty"`

	// token
	Token string `json:"token,omitempty"`

	// username
	Username *V1SystemGitAuthSpec `json:"username,omitempty"`
}

// Validate validates this v1 system git auth spec
func (m *V1SystemGitAuthSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUsername(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1SystemGitAuthSpec) validateUsername(formats strfmt.Registry) error {

	if swag.IsZero(m.Username) { // not required
		return nil
	}

	if m.Username != nil {
		if err := m.Username.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("username")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1SystemGitAuthSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1SystemGitAuthSpec) UnmarshalBinary(b []byte) error {
	var res V1SystemGitAuthSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
