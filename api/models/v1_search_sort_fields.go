// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1SearchSortFields v1 search sort fields
//
// swagger:model v1SearchSortFields
type V1SearchSortFields string

const (

	// V1SearchSortFieldsEnvironment captures enum value "environment"
	V1SearchSortFieldsEnvironment V1SearchSortFields = "environment"

	// V1SearchSortFieldsClusterName captures enum value "clusterName"
	V1SearchSortFieldsClusterName V1SearchSortFields = "clusterName"

	// V1SearchSortFieldsClusterState captures enum value "clusterState"
	V1SearchSortFieldsClusterState V1SearchSortFields = "clusterState"

	// V1SearchSortFieldsHealthState captures enum value "healthState"
	V1SearchSortFieldsHealthState V1SearchSortFields = "healthState"

	// V1SearchSortFieldsCreationTimestamp captures enum value "creationTimestamp"
	V1SearchSortFieldsCreationTimestamp V1SearchSortFields = "creationTimestamp"

	// V1SearchSortFieldsLastModifiedTimestamp captures enum value "lastModifiedTimestamp"
	V1SearchSortFieldsLastModifiedTimestamp V1SearchSortFields = "lastModifiedTimestamp"
)

// for schema
var v1SearchSortFieldsEnum []interface{}

func init() {
	var res []V1SearchSortFields
	if err := json.Unmarshal([]byte(`["environment","clusterName","clusterState","healthState","creationTimestamp","lastModifiedTimestamp"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1SearchSortFieldsEnum = append(v1SearchSortFieldsEnum, v)
	}
}

func (m V1SearchSortFields) validateV1SearchSortFieldsEnum(path, location string, value V1SearchSortFields) error {
	if err := validate.EnumCase(path, location, value, v1SearchSortFieldsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 search sort fields
func (m V1SearchSortFields) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1SearchSortFieldsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
