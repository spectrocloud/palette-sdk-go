// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1HostClusterEndpointConfig v1 host cluster endpoint config
//
// swagger:model v1HostClusterEndpointConfig
type V1HostClusterEndpointConfig struct {

	// ingress config
	IngressConfig *V1IngressConfig `json:"ingressConfig,omitempty"`

	// load balancer config
	LoadBalancerConfig *V1LoadBalancerConfig `json:"loadBalancerConfig,omitempty"`
}

// Validate validates this v1 host cluster endpoint config
func (m *V1HostClusterEndpointConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIngressConfig(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoadBalancerConfig(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1HostClusterEndpointConfig) validateIngressConfig(formats strfmt.Registry) error {

	if swag.IsZero(m.IngressConfig) { // not required
		return nil
	}

	if m.IngressConfig != nil {
		if err := m.IngressConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ingressConfig")
			}
			return err
		}
	}

	return nil
}

func (m *V1HostClusterEndpointConfig) validateLoadBalancerConfig(formats strfmt.Registry) error {

	if swag.IsZero(m.LoadBalancerConfig) { // not required
		return nil
	}

	if m.LoadBalancerConfig != nil {
		if err := m.LoadBalancerConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("loadBalancerConfig")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1HostClusterEndpointConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1HostClusterEndpointConfig) UnmarshalBinary(b []byte) error {
	var res V1HostClusterEndpointConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
