// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1PackRegistryMetadata Pack registry metadata
//
// swagger:model v1PackRegistryMetadata
type V1PackRegistryMetadata struct {

	// If true then helm registry is private and is not accessible for the content sync
	IsPrivate bool `json:"isPrivate"`

	// If true the registry sync is supported
	IsSyncSupported bool `json:"isSyncSupported"`

	// Pack registry kind [ "pack", "helm", "oci" ]
	Kind string `json:"kind,omitempty"`

	// Pack registry name
	Name string `json:"name,omitempty"`

	// OCI registry provider type [ "helm", "pack", "zarf" ]
	ProviderType string `json:"providerType,omitempty"`

	// Pack registry uid
	UID string `json:"uid,omitempty"`
}

// Validate validates this v1 pack registry metadata
func (m *V1PackRegistryMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1 pack registry metadata based on context it is used
func (m *V1PackRegistryMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1PackRegistryMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1PackRegistryMetadata) UnmarshalBinary(b []byte) error {
	var res V1PackRegistryMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
