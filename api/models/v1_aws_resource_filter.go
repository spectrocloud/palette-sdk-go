// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1AwsResourceFilter Filter is a filter used to identify an AWS resource
//
// swagger:model v1AwsResourceFilter
type V1AwsResourceFilter struct {

	// Name of the filter. Filter names are case-sensitive
	Name string `json:"name,omitempty"`

	// Values includes one or more filter values. Filter values are case-sensitive
	// Unique: true
	Values []string `json:"values"`
}

// Validate validates this v1 aws resource filter
func (m *V1AwsResourceFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1AwsResourceFilter) validateValues(formats strfmt.Registry) error {
	if swag.IsZero(m.Values) { // not required
		return nil
	}

	if err := validate.UniqueItems("values", "body", m.Values); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 aws resource filter based on context it is used
func (m *V1AwsResourceFilter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1AwsResourceFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1AwsResourceFilter) UnmarshalBinary(b []byte) error {
	var res V1AwsResourceFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
