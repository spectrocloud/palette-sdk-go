// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1GPUConfig v1 g p u config
//
// swagger:model v1GPUConfig
type V1GPUConfig struct {

	// Addresses is a map of PCI device entry name to its addresses.
	// Example entry would be "11:00.0 VGA compatible controller [0300]: NVIDIA
	// Corporation Device [10de:1eb1] (rev a1)"- > 0000_11_00_0" The address is
	// BDF (Bus Device Function) identifier format seperated by underscores. The
	// first 4 bits are almost always 0000. In the above example 11 is Bus, 00
	// is Device,0 is function. The values of these addreses are expected in hexadecimal
	// format
	//
	Addresses map[string]string `json:"addresses,omitempty"`

	// DeviceModel is the model of GPU, for a given vendor, for eg., TU104GL [Tesla T4]
	DeviceModel string `json:"deviceModel,omitempty"`

	// NumGPUs is the number of GPUs
	NumGPUs int32 `json:"numGPUs,omitempty"`

	// VendorName is the GPU vendor, for eg., NVIDIA or AMD
	VendorName string `json:"vendorName,omitempty"`
}

// Validate validates this v1 g p u config
func (m *V1GPUConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1GPUConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1GPUConfig) UnmarshalBinary(b []byte) error {
	var res V1GPUConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
