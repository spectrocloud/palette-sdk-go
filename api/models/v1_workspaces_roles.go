// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1WorkspacesRoles Workspace users and their roles
//
// swagger:model v1WorkspacesRoles
type V1WorkspacesRoles struct {

	// inherited roles
	InheritedRoles []*V1WorkspaceRolesUIDSummary `json:"inheritedRoles"`

	// name
	Name string `json:"name,omitempty"`

	// roles
	Roles []*V1WorkspaceRolesUIDSummary `json:"roles"`

	// uid
	UID string `json:"uid,omitempty"`
}

// Validate validates this v1 workspaces roles
func (m *V1WorkspacesRoles) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInheritedRoles(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoles(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1WorkspacesRoles) validateInheritedRoles(formats strfmt.Registry) error {

	if swag.IsZero(m.InheritedRoles) { // not required
		return nil
	}

	for i := 0; i < len(m.InheritedRoles); i++ {
		if swag.IsZero(m.InheritedRoles[i]) { // not required
			continue
		}

		if m.InheritedRoles[i] != nil {
			if err := m.InheritedRoles[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("inheritedRoles" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *V1WorkspacesRoles) validateRoles(formats strfmt.Registry) error {

	if swag.IsZero(m.Roles) { // not required
		return nil
	}

	for i := 0; i < len(m.Roles); i++ {
		if swag.IsZero(m.Roles[i]) { // not required
			continue
		}

		if m.Roles[i] != nil {
			if err := m.Roles[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("roles" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1WorkspacesRoles) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1WorkspacesRoles) UnmarshalBinary(b []byte) error {
	var res V1WorkspacesRoles
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
