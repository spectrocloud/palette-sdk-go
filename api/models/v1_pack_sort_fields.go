// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1PackSortFields Packs sort by fields
//
// swagger:model v1PackSortFields
type V1PackSortFields string

func NewV1PackSortFields(value V1PackSortFields) *V1PackSortFields {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1PackSortFields.
func (m V1PackSortFields) Pointer() *V1PackSortFields {
	return &m
}

const (

	// V1PackSortFieldsName captures enum value "name"
	V1PackSortFieldsName V1PackSortFields = "name"

	// V1PackSortFieldsType captures enum value "type"
	V1PackSortFieldsType V1PackSortFields = "type"

	// V1PackSortFieldsLayer captures enum value "layer"
	V1PackSortFieldsLayer V1PackSortFields = "layer"

	// V1PackSortFieldsAddOnType captures enum value "addOnType"
	V1PackSortFieldsAddOnType V1PackSortFields = "addOnType"

	// V1PackSortFieldsDisplayName captures enum value "displayName"
	V1PackSortFieldsDisplayName V1PackSortFields = "displayName"
)

// for schema
var v1PackSortFieldsEnum []interface{}

func init() {
	var res []V1PackSortFields
	if err := json.Unmarshal([]byte(`["name","type","layer","addOnType","displayName"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1PackSortFieldsEnum = append(v1PackSortFieldsEnum, v)
	}
}

func (m V1PackSortFields) validateV1PackSortFieldsEnum(path, location string, value V1PackSortFields) error {
	if err := validate.EnumCase(path, location, value, v1PackSortFieldsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 pack sort fields
func (m V1PackSortFields) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1PackSortFieldsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 pack sort fields based on context it is used
func (m V1PackSortFields) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
