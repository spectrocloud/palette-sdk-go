// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1ProductUsage Product usage
//
// swagger:model v1ProductUsage
type V1ProductUsage struct {

	// alloy usage
	AlloyUsage *V1SystemProductUsage `json:"alloyUsage,omitempty"`

	// pure usage
	PureUsage *V1SystemProductUsage `json:"pureUsage,omitempty"`
}

// Validate validates this v1 product usage
func (m *V1ProductUsage) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAlloyUsage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePureUsage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1ProductUsage) validateAlloyUsage(formats strfmt.Registry) error {

	if swag.IsZero(m.AlloyUsage) { // not required
		return nil
	}

	if m.AlloyUsage != nil {
		if err := m.AlloyUsage.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("alloyUsage")
			}
			return err
		}
	}

	return nil
}

func (m *V1ProductUsage) validatePureUsage(formats strfmt.Registry) error {

	if swag.IsZero(m.PureUsage) { // not required
		return nil
	}

	if m.PureUsage != nil {
		if err := m.PureUsage.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pureUsage")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1ProductUsage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ProductUsage) UnmarshalBinary(b []byte) error {
	var res V1ProductUsage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
