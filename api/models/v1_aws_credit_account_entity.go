// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1AwsCreditAccountEntity v1 aws credit account entity
//
// swagger:model v1AwsCreditAccountEntity
type V1AwsCreditAccountEntity struct {

	// credit limit in dollars
	CreditLimitInDollars float64 `json:"creditLimitInDollars"`

	// credit used in dollars
	CreditUsedInDollars float64 `json:"creditUsedInDollars"`

	// login credentials
	LoginCredentials *V1AwsLoginCredentials `json:"loginCredentials,omitempty"`

	// user cloud account
	UserCloudAccount *V1AwsUserCloudAccount `json:"userCloudAccount,omitempty"`
}

// Validate validates this v1 aws credit account entity
func (m *V1AwsCreditAccountEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLoginCredentials(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserCloudAccount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1AwsCreditAccountEntity) validateLoginCredentials(formats strfmt.Registry) error {

	if swag.IsZero(m.LoginCredentials) { // not required
		return nil
	}

	if m.LoginCredentials != nil {
		if err := m.LoginCredentials.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("loginCredentials")
			}
			return err
		}
	}

	return nil
}

func (m *V1AwsCreditAccountEntity) validateUserCloudAccount(formats strfmt.Registry) error {

	if swag.IsZero(m.UserCloudAccount) { // not required
		return nil
	}

	if m.UserCloudAccount != nil {
		if err := m.UserCloudAccount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("userCloudAccount")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1AwsCreditAccountEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1AwsCreditAccountEntity) UnmarshalBinary(b []byte) error {
	var res V1AwsCreditAccountEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
