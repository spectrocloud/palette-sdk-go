// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1AwsCloudAccountCredentialType Allowed Values [secret, sts, pod-identity]. STS type will be used for role assumption for sts type, accessKey/secretKey contains the source account, Arn is the target account. Pod Identity type will be used for EKS Pod Identity authentication with roleArn as the target account.
//
// swagger:model v1AwsCloudAccountCredentialType
type V1AwsCloudAccountCredentialType string

func NewV1AwsCloudAccountCredentialType(value V1AwsCloudAccountCredentialType) *V1AwsCloudAccountCredentialType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1AwsCloudAccountCredentialType.
func (m V1AwsCloudAccountCredentialType) Pointer() *V1AwsCloudAccountCredentialType {
	return &m
}

const (

	// V1AwsCloudAccountCredentialTypeSecret captures enum value "secret"
	V1AwsCloudAccountCredentialTypeSecret V1AwsCloudAccountCredentialType = "secret"

	// V1AwsCloudAccountCredentialTypeSts captures enum value "sts"
	V1AwsCloudAccountCredentialTypeSts V1AwsCloudAccountCredentialType = "sts"

	// V1AwsCloudAccountCredentialTypePodDashIdentity captures enum value "pod-identity"
	V1AwsCloudAccountCredentialTypePodDashIdentity V1AwsCloudAccountCredentialType = "pod-identity"
)

// for schema
var v1AwsCloudAccountCredentialTypeEnum []interface{}

func init() {
	var res []V1AwsCloudAccountCredentialType
	if err := json.Unmarshal([]byte(`["secret","sts","pod-identity"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1AwsCloudAccountCredentialTypeEnum = append(v1AwsCloudAccountCredentialTypeEnum, v)
	}
}

func (m V1AwsCloudAccountCredentialType) validateV1AwsCloudAccountCredentialTypeEnum(path, location string, value V1AwsCloudAccountCredentialType) error {
	if err := validate.EnumCase(path, location, value, v1AwsCloudAccountCredentialTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 aws cloud account credential type
func (m V1AwsCloudAccountCredentialType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1AwsCloudAccountCredentialTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 aws cloud account credential type based on context it is used
func (m V1AwsCloudAccountCredentialType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
