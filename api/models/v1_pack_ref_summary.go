// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1PackRefSummary Pack ref summary
//
// swagger:model v1PackRefSummary
type V1PackRefSummary struct {

	// addon type
	AddonType string `json:"addonType,omitempty"`

	// annotations
	Annotations map[string]string `json:"annotations,omitempty"`

	// display name
	DisplayName string `json:"displayName,omitempty"`

	// layer
	Layer V1PackLayer `json:"layer,omitempty"`

	// logo Url
	LogoURL string `json:"logoUrl,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// pack Uid
	PackUID string `json:"packUid,omitempty"`

	// tag
	Tag string `json:"tag,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this v1 pack ref summary
func (m *V1PackRefSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLayer(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1PackRefSummary) validateLayer(formats strfmt.Registry) error {

	if swag.IsZero(m.Layer) { // not required
		return nil
	}

	if err := m.Layer.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("layer")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1PackRefSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1PackRefSummary) UnmarshalBinary(b []byte) error {
	var res V1PackRefSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
