// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1AADProfile AADProfile - AAD integration is managed by AKS.
//
// swagger:model v1AADProfile
type V1AADProfile struct {

	// AdminGroupObjectIDs - AAD group object IDs that will have admin role of the cluster.
	// Required: true
	AdminGroupObjectIDs []string `json:"adminGroupObjectIDs"`

	// Managed - Whether to enable managed AAD.
	// Required: true
	Managed *bool `json:"managed"`
}

// Validate validates this v1 a a d profile
func (m *V1AADProfile) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAdminGroupObjectIDs(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateManaged(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1AADProfile) validateAdminGroupObjectIDs(formats strfmt.Registry) error {

	if err := validate.Required("adminGroupObjectIDs", "body", m.AdminGroupObjectIDs); err != nil {
		return err
	}

	return nil
}

func (m *V1AADProfile) validateManaged(formats strfmt.Registry) error {

	if err := validate.Required("managed", "body", m.Managed); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 a a d profile based on context it is used
func (m *V1AADProfile) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1AADProfile) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1AADProfile) UnmarshalBinary(b []byte) error {
	var res V1AADProfile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
