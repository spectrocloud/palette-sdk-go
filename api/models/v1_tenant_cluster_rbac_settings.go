// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1TenantClusterRbacSettings Tenant cluster RBAC settings
//
// swagger:model v1TenantClusterRbacSettings
type V1TenantClusterRbacSettings struct {

	// Specifies the mode for automatic creation and management of cluster role bindings for tenant clusters
	// Enum: ["none","enabled","disabled"]
	AutomaticClusterRoleBinding *string `json:"automaticClusterRoleBinding"`
}

// Validate validates this v1 tenant cluster rbac settings
func (m *V1TenantClusterRbacSettings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAutomaticClusterRoleBinding(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v1TenantClusterRbacSettingsTypeAutomaticClusterRoleBindingPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["none","enabled","disabled"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1TenantClusterRbacSettingsTypeAutomaticClusterRoleBindingPropEnum = append(v1TenantClusterRbacSettingsTypeAutomaticClusterRoleBindingPropEnum, v)
	}
}

const (

	// V1TenantClusterRbacSettingsAutomaticClusterRoleBindingNone captures enum value "none"
	V1TenantClusterRbacSettingsAutomaticClusterRoleBindingNone string = "none"

	// V1TenantClusterRbacSettingsAutomaticClusterRoleBindingEnabled captures enum value "enabled"
	V1TenantClusterRbacSettingsAutomaticClusterRoleBindingEnabled string = "enabled"

	// V1TenantClusterRbacSettingsAutomaticClusterRoleBindingDisabled captures enum value "disabled"
	V1TenantClusterRbacSettingsAutomaticClusterRoleBindingDisabled string = "disabled"
)

// prop value enum
func (m *V1TenantClusterRbacSettings) validateAutomaticClusterRoleBindingEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, v1TenantClusterRbacSettingsTypeAutomaticClusterRoleBindingPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V1TenantClusterRbacSettings) validateAutomaticClusterRoleBinding(formats strfmt.Registry) error {
	if swag.IsZero(m.AutomaticClusterRoleBinding) { // not required
		return nil
	}

	// value enum
	if err := m.validateAutomaticClusterRoleBindingEnum("automaticClusterRoleBinding", "body", *m.AutomaticClusterRoleBinding); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 tenant cluster rbac settings based on context it is used
func (m *V1TenantClusterRbacSettings) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1TenantClusterRbacSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1TenantClusterRbacSettings) UnmarshalBinary(b []byte) error {
	var res V1TenantClusterRbacSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
