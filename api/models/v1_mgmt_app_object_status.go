// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1MgmtAppObjectStatus v1 mgmt app object status
//
// swagger:model v1MgmtAppObjectStatus
type V1MgmtAppObjectStatus struct {

	// available replicas
	AvailableReplicas int64 `json:"availableReplicas,omitempty"`

	// creation time
	// Format: date-time
	CreationTime V1Time `json:"creationTime,omitempty"`

	// desired replica count
	DesiredReplicaCount int64 `json:"desiredReplicaCount,omitempty"`

	// is healthy
	IsHealthy bool `json:"isHealthy"`

	// messages
	Messages []string `json:"messages"`

	// name
	Name string `json:"name,omitempty"`

	// pods
	Pods map[string]V1MgmtAppPodsStatus `json:"pods,omitempty"`
}

// Validate validates this v1 mgmt app object status
func (m *V1MgmtAppObjectStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreationTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePods(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1MgmtAppObjectStatus) validateCreationTime(formats strfmt.Registry) error {

	if swag.IsZero(m.CreationTime) { // not required
		return nil
	}

	if err := m.CreationTime.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("creationTime")
		}
		return err
	}

	return nil
}

func (m *V1MgmtAppObjectStatus) validatePods(formats strfmt.Registry) error {

	if swag.IsZero(m.Pods) { // not required
		return nil
	}

	for k := range m.Pods {

		if err := validate.Required("pods"+"."+k, "body", m.Pods[k]); err != nil {
			return err
		}
		if val, ok := m.Pods[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1MgmtAppObjectStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1MgmtAppObjectStatus) UnmarshalBinary(b []byte) error {
	var res V1MgmtAppObjectStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
