// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1KubeBenchReportEntity KubeBench report
//
// swagger:model v1KubeBenchReportEntity
type V1KubeBenchReportEntity struct {

	// fail
	Fail int32 `json:"fail,omitempty"`

	// info
	Info int32 `json:"info,omitempty"`

	// logs
	Logs []*V1KubeBenchLogEntity `json:"logs"`

	// name
	Name string `json:"name,omitempty"`

	// pass
	Pass int32 `json:"pass,omitempty"`

	// time
	// Format: date-time
	Time V1Time `json:"time,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// warn
	Warn int32 `json:"warn,omitempty"`
}

// Validate validates this v1 kube bench report entity
func (m *V1KubeBenchReportEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLogs(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1KubeBenchReportEntity) validateLogs(formats strfmt.Registry) error {

	if swag.IsZero(m.Logs) { // not required
		return nil
	}

	for i := 0; i < len(m.Logs); i++ {
		if swag.IsZero(m.Logs[i]) { // not required
			continue
		}

		if m.Logs[i] != nil {
			if err := m.Logs[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("logs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *V1KubeBenchReportEntity) validateTime(formats strfmt.Registry) error {

	if swag.IsZero(m.Time) { // not required
		return nil
	}

	if err := m.Time.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("time")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1KubeBenchReportEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1KubeBenchReportEntity) UnmarshalBinary(b []byte) error {
	var res V1KubeBenchReportEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
