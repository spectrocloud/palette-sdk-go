// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1VsphereNetworkConfigEntity v1 vsphere network config entity
//
// swagger:model v1VsphereNetworkConfigEntity
type V1VsphereNetworkConfigEntity struct {

	// NetworkName is the name of the network in which VMs are created/located.
	// Required: true
	NetworkName *string `json:"networkName"`

	// ParentPoolRef Uid to the ParentPool which allocates IPs for this IPPool
	ParentPoolUID string `json:"parentPoolUid,omitempty"`

	// support dhcp or static IP, if false, use DHCP
	StaticIP bool `json:"staticIp,omitempty"`
}

// Validate validates this v1 vsphere network config entity
func (m *V1VsphereNetworkConfigEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNetworkName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1VsphereNetworkConfigEntity) validateNetworkName(formats strfmt.Registry) error {

	if err := validate.Required("networkName", "body", m.NetworkName); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1VsphereNetworkConfigEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1VsphereNetworkConfigEntity) UnmarshalBinary(b []byte) error {
	var res V1VsphereNetworkConfigEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
