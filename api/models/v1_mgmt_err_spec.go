// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1MgmtErrSpec v1 mgmt err spec
//
// swagger:model v1MgmtErrSpec
type V1MgmtErrSpec struct {

	// causes
	Causes []string `json:"causes"`

	// data
	Data string `json:"data,omitempty"`

	// debug
	Debug map[string]interface{} `json:"debug,omitempty"`

	// err code
	ErrCode string `json:"errCode,omitempty"`

	// err msg
	ErrMsg string `json:"errMsg,omitempty"`

	// stack traces
	StackTraces []string `json:"stackTraces"`

	// user ctx
	UserCtx *V1MgmtErrSpecUserCtx `json:"userCtx,omitempty"`
}

// Validate validates this v1 mgmt err spec
func (m *V1MgmtErrSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUserCtx(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1MgmtErrSpec) validateUserCtx(formats strfmt.Registry) error {

	if swag.IsZero(m.UserCtx) { // not required
		return nil
	}

	if m.UserCtx != nil {
		if err := m.UserCtx.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("userCtx")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1MgmtErrSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1MgmtErrSpec) UnmarshalBinary(b []byte) error {
	var res V1MgmtErrSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// V1MgmtErrSpecUserCtx v1 mgmt err spec user ctx
//
// swagger:model V1MgmtErrSpecUserCtx
type V1MgmtErrSpecUserCtx struct {

	// project Uid
	ProjectUID string `json:"projectUid,omitempty"`

	// service res Uid
	ServiceResUID string `json:"serviceResUid,omitempty"`

	// tenant Uid
	TenantUID string `json:"tenantUid,omitempty"`

	// user Uid
	UserUID string `json:"userUid,omitempty"`
}

// Validate validates this v1 mgmt err spec user ctx
func (m *V1MgmtErrSpecUserCtx) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1MgmtErrSpecUserCtx) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1MgmtErrSpecUserCtx) UnmarshalBinary(b []byte) error {
	var res V1MgmtErrSpecUserCtx
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
