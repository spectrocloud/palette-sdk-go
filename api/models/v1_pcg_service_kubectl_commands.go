// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1PcgServiceKubectlCommands Array of kubectl commands
//
// swagger:model v1PcgServiceKubectlCommands
type V1PcgServiceKubectlCommands struct {

	// kubectl commands
	// Required: true
	// Unique: true
	KubectlCommands []string `json:"kubectlCommands"`

	// overlord Uid
	OverlordUID string `json:"overlordUid,omitempty"`
}

// Validate validates this v1 pcg service kubectl commands
func (m *V1PcgServiceKubectlCommands) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKubectlCommands(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1PcgServiceKubectlCommands) validateKubectlCommands(formats strfmt.Registry) error {

	if err := validate.Required("kubectlCommands", "body", m.KubectlCommands); err != nil {
		return err
	}

	if err := validate.UniqueItems("kubectlCommands", "body", m.KubectlCommands); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 pcg service kubectl commands based on context it is used
func (m *V1PcgServiceKubectlCommands) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1PcgServiceKubectlCommands) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1PcgServiceKubectlCommands) UnmarshalBinary(b []byte) error {
	var res V1PcgServiceKubectlCommands
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
