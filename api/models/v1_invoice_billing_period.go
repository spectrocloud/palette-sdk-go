// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1InvoiceBillingPeriod Invoice billing period object
//
// swagger:model v1InvoiceBillingPeriod
type V1InvoiceBillingPeriod struct {

	// end
	// Format: date-time
	End V1Time `json:"end,omitempty"`

	// start
	// Format: date-time
	Start V1Time `json:"start,omitempty"`
}

// Validate validates this v1 invoice billing period
func (m *V1InvoiceBillingPeriod) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStart(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1InvoiceBillingPeriod) validateEnd(formats strfmt.Registry) error {

	if swag.IsZero(m.End) { // not required
		return nil
	}

	if err := m.End.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("end")
		}
		return err
	}

	return nil
}

func (m *V1InvoiceBillingPeriod) validateStart(formats strfmt.Registry) error {

	if swag.IsZero(m.Start) { // not required
		return nil
	}

	if err := m.Start.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("start")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1InvoiceBillingPeriod) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1InvoiceBillingPeriod) UnmarshalBinary(b []byte) error {
	var res V1InvoiceBillingPeriod
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
