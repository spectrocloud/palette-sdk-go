// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1ClusterUpgradeSettingsEntity v1 cluster upgrade settings entity
//
// swagger:model v1ClusterUpgradeSettingsEntity
type V1ClusterUpgradeSettingsEntity struct {

	// spectro components
	// Enum: ["lock","unlock"]
	SpectroComponents string `json:"spectroComponents,omitempty"`
}

// Validate validates this v1 cluster upgrade settings entity
func (m *V1ClusterUpgradeSettingsEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSpectroComponents(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v1ClusterUpgradeSettingsEntityTypeSpectroComponentsPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["lock","unlock"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1ClusterUpgradeSettingsEntityTypeSpectroComponentsPropEnum = append(v1ClusterUpgradeSettingsEntityTypeSpectroComponentsPropEnum, v)
	}
}

const (

	// V1ClusterUpgradeSettingsEntitySpectroComponentsLock captures enum value "lock"
	V1ClusterUpgradeSettingsEntitySpectroComponentsLock string = "lock"

	// V1ClusterUpgradeSettingsEntitySpectroComponentsUnlock captures enum value "unlock"
	V1ClusterUpgradeSettingsEntitySpectroComponentsUnlock string = "unlock"
)

// prop value enum
func (m *V1ClusterUpgradeSettingsEntity) validateSpectroComponentsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, v1ClusterUpgradeSettingsEntityTypeSpectroComponentsPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V1ClusterUpgradeSettingsEntity) validateSpectroComponents(formats strfmt.Registry) error {
	if swag.IsZero(m.SpectroComponents) { // not required
		return nil
	}

	// value enum
	if err := m.validateSpectroComponentsEnum("spectroComponents", "body", m.SpectroComponents); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 cluster upgrade settings entity based on context it is used
func (m *V1ClusterUpgradeSettingsEntity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1ClusterUpgradeSettingsEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ClusterUpgradeSettingsEntity) UnmarshalBinary(b []byte) error {
	var res V1ClusterUpgradeSettingsEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
