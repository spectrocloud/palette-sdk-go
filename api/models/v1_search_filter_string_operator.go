// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1SearchFilterStringOperator v1 search filter string operator
//
// swagger:model v1SearchFilterStringOperator
type V1SearchFilterStringOperator string

const (

	// V1SearchFilterStringOperatorEq captures enum value "eq"
	V1SearchFilterStringOperatorEq V1SearchFilterStringOperator = "eq"

	// V1SearchFilterStringOperatorContains captures enum value "contains"
	V1SearchFilterStringOperatorContains V1SearchFilterStringOperator = "contains"

	// V1SearchFilterStringOperatorBeginsWith captures enum value "beginsWith"
	V1SearchFilterStringOperatorBeginsWith V1SearchFilterStringOperator = "beginsWith"
)

// for schema
var v1SearchFilterStringOperatorEnum []interface{}

func init() {
	var res []V1SearchFilterStringOperator
	if err := json.Unmarshal([]byte(`["eq","contains","beginsWith"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1SearchFilterStringOperatorEnum = append(v1SearchFilterStringOperatorEnum, v)
	}
}

func (m V1SearchFilterStringOperator) validateV1SearchFilterStringOperatorEnum(path, location string, value V1SearchFilterStringOperator) error {
	if err := validate.EnumCase(path, location, value, v1SearchFilterStringOperatorEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 search filter string operator
func (m V1SearchFilterStringOperator) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1SearchFilterStringOperatorEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
