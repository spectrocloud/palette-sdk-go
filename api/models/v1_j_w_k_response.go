// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1JWKResponse v1 j w k response
//
// swagger:model v1JWKResponse
type V1JWKResponse struct {

	// The "alg" (algorithm) parameter identifies the algorithm intended for use with the key
	Alg string `json:"alg,omitempty"`

	// e
	E string `json:"e,omitempty"`

	// The "key_ops" (key operations) parameter identifies the operation(s) for which the key is intended to be used
	KeyOps string `json:"key_ops,omitempty"`

	// The "kid" (key ID) parameter is used to match a specific key
	Kid string `json:"kid,omitempty"`

	// The "kty" (key type) parameter identifies the cryptographic algorithm family used with the key, such as "RSA" or "EC"
	Kty string `json:"kty,omitempty"`

	// n
	N string `json:"n,omitempty"`

	// The "use" (public key use) parameter identifies the intended use of the public key
	Use string `json:"use,omitempty"`
}

// Validate validates this v1 j w k response
func (m *V1JWKResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1JWKResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1JWKResponse) UnmarshalBinary(b []byte) error {
	var res V1JWKResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
