// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1LibvirtDiskSpec v1 libvirt disk spec
//
// swagger:model v1LibvirtDiskSpec
type V1LibvirtDiskSpec struct {

	// DataStoragePool is the storage pool from which additional disks are assigned
	DataStoragePool string `json:"dataStoragePool,omitempty"`

	// Managed indicates if the disk is a persistent or not. By default its false indicating all disks are ephemeral.
	Managed bool `json:"managed,omitempty"`

	// SizeInGB is the target size in GB of the disk to be added
	// Required: true
	SizeInGB *int32 `json:"sizeInGB"`
}

// Validate validates this v1 libvirt disk spec
func (m *V1LibvirtDiskSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSizeInGB(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1LibvirtDiskSpec) validateSizeInGB(formats strfmt.Registry) error {

	if err := validate.Required("sizeInGB", "body", m.SizeInGB); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1LibvirtDiskSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1LibvirtDiskSpec) UnmarshalBinary(b []byte) error {
	var res V1LibvirtDiskSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
