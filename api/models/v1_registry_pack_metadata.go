// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1RegistryPackMetadata Registry metadata information
//
// swagger:model v1RegistryPackMetadata
type V1RegistryPackMetadata struct {

	// Pack annotations is used to allow pack to add more arbitrary configurations
	Annotations map[string]string `json:"annotations,omitempty"`

	// Latest pack uid
	LatestPackUID string `json:"latestPackUid,omitempty"`

	// Pack latest version
	LatestVersion string `json:"latestVersion,omitempty"`

	// Pack logo url
	LogoURL string `json:"logoUrl,omitempty"`

	// Pack registry name
	Name string `json:"name,omitempty"`

	// Pack registry scope
	Scope string `json:"scope,omitempty"`

	// Pack registry uid
	UID string `json:"uid,omitempty"`
}

// Validate validates this v1 registry pack metadata
func (m *V1RegistryPackMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1 registry pack metadata based on context it is used
func (m *V1RegistryPackMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1RegistryPackMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1RegistryPackMetadata) UnmarshalBinary(b []byte) error {
	var res V1RegistryPackMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
