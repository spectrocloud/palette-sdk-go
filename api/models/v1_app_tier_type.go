// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1AppTierType v1 app tier type
//
// swagger:model v1AppTierType
type V1AppTierType string

const (

	// V1AppTierTypeManifest captures enum value "manifest"
	V1AppTierTypeManifest V1AppTierType = "manifest"

	// V1AppTierTypeHelm captures enum value "helm"
	V1AppTierTypeHelm V1AppTierType = "helm"

	// V1AppTierTypeOperatorInstance captures enum value "operator-instance"
	V1AppTierTypeOperatorInstance V1AppTierType = "operator-instance"

	// V1AppTierTypeContainer captures enum value "container"
	V1AppTierTypeContainer V1AppTierType = "container"
)

// for schema
var v1AppTierTypeEnum []interface{}

func init() {
	var res []V1AppTierType
	if err := json.Unmarshal([]byte(`["manifest","helm","operator-instance","container"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1AppTierTypeEnum = append(v1AppTierTypeEnum, v)
	}
}

func (m V1AppTierType) validateV1AppTierTypeEnum(path, location string, value V1AppTierType) error {
	if err := validate.EnumCase(path, location, value, v1AppTierTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 app tier type
func (m V1AppTierType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1AppTierTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
