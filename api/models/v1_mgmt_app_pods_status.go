// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1MgmtAppPodsStatus v1 mgmt app pods status
//
// swagger:model v1MgmtAppPodsStatus
type V1MgmtAppPodsStatus struct {

	// containers
	Containers map[string]V1MgmtAppContainersStatus `json:"containers,omitempty"`

	// is healthy
	IsHealthy bool `json:"isHealthy"`

	// messages
	Messages []string `json:"messages"`

	// name
	Name string `json:"name,omitempty"`

	// phase
	Phase string `json:"phase,omitempty"`

	// pvcs
	Pvcs map[string]V1MgmtAppPvcStatus `json:"pvcs,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// start time
	// Format: date-time
	StartTime V1Time `json:"startTime,omitempty"`
}

// Validate validates this v1 mgmt app pods status
func (m *V1MgmtAppPodsStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContainers(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePvcs(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1MgmtAppPodsStatus) validateContainers(formats strfmt.Registry) error {

	if swag.IsZero(m.Containers) { // not required
		return nil
	}

	for k := range m.Containers {

		if err := validate.Required("containers"+"."+k, "body", m.Containers[k]); err != nil {
			return err
		}
		if val, ok := m.Containers[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *V1MgmtAppPodsStatus) validatePvcs(formats strfmt.Registry) error {

	if swag.IsZero(m.Pvcs) { // not required
		return nil
	}

	for k := range m.Pvcs {

		if err := validate.Required("pvcs"+"."+k, "body", m.Pvcs[k]); err != nil {
			return err
		}
		if val, ok := m.Pvcs[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *V1MgmtAppPodsStatus) validateStartTime(formats strfmt.Registry) error {

	if swag.IsZero(m.StartTime) { // not required
		return nil
	}

	if err := m.StartTime.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("startTime")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1MgmtAppPodsStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1MgmtAppPodsStatus) UnmarshalBinary(b []byte) error {
	var res V1MgmtAppPodsStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
