// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1SpectroClusterVMCloneEntity v1 spectro cluster VM clone entity
//
// swagger:model v1SpectroClusterVMCloneEntity
type V1SpectroClusterVMCloneEntity struct {

	// Annotation filters
	AnnotationFilters []string `json:"annotationFilters"`

	// Cloning Virtual machine's name
	// Required: true
	CloneName *string `json:"cloneName"`

	// Label filters
	LabelFilters []string `json:"labelFilters"`

	// NewMacAddresses manually sets that target interfaces' mac addresses. The key is the interface name and the value is the new mac address. If this field is not specified, a new MAC address will be generated automatically, as for any interface that is not included in this map
	NewMacAddresses map[string]string `json:"newMacAddresses,omitempty"`

	// NewSMBiosSerial manually sets that target's SMbios serial. If this field is not specified, a new serial will be generated automatically.
	NewSMBiosSerial string `json:"newSMBiosSerial,omitempty"`
}

// Validate validates this v1 spectro cluster VM clone entity
func (m *V1SpectroClusterVMCloneEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCloneName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1SpectroClusterVMCloneEntity) validateCloneName(formats strfmt.Registry) error {

	if err := validate.Required("cloneName", "body", m.CloneName); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1SpectroClusterVMCloneEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1SpectroClusterVMCloneEntity) UnmarshalBinary(b []byte) error {
	var res V1SpectroClusterVMCloneEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
