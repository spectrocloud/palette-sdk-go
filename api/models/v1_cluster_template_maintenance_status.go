// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1ClusterTemplateMaintenanceStatus Cluster template maintenance status
//
// swagger:model v1ClusterTemplateMaintenanceStatus
type V1ClusterTemplateMaintenanceStatus struct {

	// Next maintenance window end time
	// Format: date-time
	NextWindowEndTime strfmt.DateTime `json:"nextWindowEndTime,omitempty"`

	// Next maintenance window start time
	// Format: date-time
	NextWindowStartTime strfmt.DateTime `json:"nextWindowStartTime,omitempty"`
}

// Validate validates this v1 cluster template maintenance status
func (m *V1ClusterTemplateMaintenanceStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNextWindowEndTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNextWindowStartTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1ClusterTemplateMaintenanceStatus) validateNextWindowEndTime(formats strfmt.Registry) error {
	if swag.IsZero(m.NextWindowEndTime) { // not required
		return nil
	}

	if err := validate.FormatOf("nextWindowEndTime", "body", "date-time", m.NextWindowEndTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *V1ClusterTemplateMaintenanceStatus) validateNextWindowStartTime(formats strfmt.Registry) error {
	if swag.IsZero(m.NextWindowStartTime) { // not required
		return nil
	}

	if err := validate.FormatOf("nextWindowStartTime", "body", "date-time", m.NextWindowStartTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 cluster template maintenance status based on context it is used
func (m *V1ClusterTemplateMaintenanceStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1ClusterTemplateMaintenanceStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ClusterTemplateMaintenanceStatus) UnmarshalBinary(b []byte) error {
	var res V1ClusterTemplateMaintenanceStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
