// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1UserStatus User status
//
// swagger:model v1UserStatus
type V1UserStatus struct {

	// provides the link to activate or reset the user password
	ActivationLink string `json:"activationLink"`

	// Specifies if user account is active/disabled
	IsActive bool `json:"isActive"`

	// Specifies if user in multi org requested password reset
	IsPasswordResetting bool `json:"isPasswordResetting"`

	// user's last sign in time
	// Format: date-time
	LastSignIn V1Time `json:"lastSignIn,omitempty"`
}

// Validate validates this v1 user status
func (m *V1UserStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastSignIn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1UserStatus) validateLastSignIn(formats strfmt.Registry) error {

	if swag.IsZero(m.LastSignIn) { // not required
		return nil
	}

	if err := m.LastSignIn.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("lastSignIn")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1UserStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1UserStatus) UnmarshalBinary(b []byte) error {
	var res V1UserStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
